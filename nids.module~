<?php

/**
 * Implements hook_node_info().
 */
function nids_node_info() {
  $info = array();

  $info['nichoir'] = array(
    'name'        => t('nichoir'),
    'base'        => 'nichoir',
    'module'      => 'nids',
    'description' => t('Ajout observations nichoir.'),
    'has_body'    => true
    );
  return $info;
}

function nids_init() {
  $module_path = base_path().drupal_get_path('module', 'nids');
  drupal_add_js(array(
    'nids_path' => $module_path,
    'nids_callback_base_url' => base_path().'nids'
    ), 'setting');
}

include('nids_blocks.inc');
include('nids_forms.inc');
include('nids_functions.inc');

// Implementation of hook_menu(): used to create a page for the form
function nids_menu() {
  $items = array();
  $items['cour'] = array(
    'title'           => t('Dans ta cour'),
    'description'     => t('Dans ta cour'),
    'menu_name'       => 'quastuvu1',
    'access arguments' => array('access content'),
    'weight'          => 3,
    'access callback' => 'user_access',
    'page callback' => 'quastuvu2_callback',
    'type' => MENU_NORMAL_ITEM,
    );
  $items['parc'] = array(
    'title'           => t('Dans un nichoir dans un parc'),
    'description'     => t('Dans un nichoir dans un parc'),
    'menu_name'       => 'quastuvu1',
    'access arguments' => array('access content'),
    'weight'          => 3,
    'access callback' => 'user_access',
    'page callback' => 'nichoir_callback',
    'type' => MENU_NORMAL_ITEM,
    );
  $items['ecole'] = array(
    'title'           => t("À une école"),
    'description'     => t('À une école'),
    'menu_name'       => 'quastuvu1',
    'access arguments' => array('access content'),
    'weight'          => 3,
    'access callback' => 'user_access',
    'page callback' => 'ecole_callback',
    'type' => MENU_NORMAL_ITEM,
    );

  $items['nichoir_ecole'] = array(
    'title'           => t('Dans un nichoir dans une cour d\'école'),
    'description'     => t('Dans un nichoir dans une cour d\'école'),
    'menu_name'       => 'quastuvu5',
    'access arguments' => array('access content'),
    'weight'          => 4,
    'access callback' => 'user_access',
    'page callback' => 'nichoir_callback',
    'type' => MENU_NORMAL_ITEM,
    );

  $items['ecole_obs'] = array(
    'title'           => t('Oiseau(x) observé(s) dans la cour d\'une école'),
    'description'     => t('Oiseau(x) observé(s) dans la cour d\'une école'),
    'menu_name'       => 'quastuvu5',
    'access arguments' => array('access content'),
    'weight'          => 4,
    'access callback' => 'user_access',
    'page callback' => 'cour_callback',
    'type' => MENU_NORMAL_ITEM,
    );

  $items['nichoir'] = array(
    'title'           => t('Dans ton nichoir'),
    'description'     => t('Dans ton nichoir'),
    'menu_name'       => 'quastuvu2',
    'access arguments' => array('access content'),
    'weight'          => 3,
    'access callback' => 'user_access',
    'page callback' => 'nichoir_callback',
    'type' => MENU_NORMAL_ITEM,
    );
    
  $items['nichoir_parc'] = array(
    'title'           => t('Dans un nichoir dans un parc'),
    'description'     => t('Dans un nichoir dans un parc'),
    'menu_name'       => 'quastuvu3',
    'access arguments' => array('access content'),
    'weight'          => 4,
    'access callback' => 'user_access',
    'page callback' => 'nichoir_parc_callback',
    'type' => MENU_NORMAL_ITEM,
    );

  $items['cour_obs'] = array(
    'title'           => t('Oiseau(x) observé(s) dans ta cour'),
    'description'     => t('Dans ta cour'),
    'menu_name'       => 'quastuvu2',
    'access arguments' => array('access content'),
    'weight'          => 6,
    'access callback' => 'user_access',
    'page callback' => 'cour_callback',
    'type' => MENU_NORMAL_ITEM,
    );

  $items['observation'] = array(
    'title'           => t('Ajouter une observation'),
    'description'     => t('Dans ta cour'),
    'menu_name'       => 'main-menu',
    'access arguments' => array('create nichoir content'),
    'weight'          => 7,
    'access callback' => 'user_access',
    'page callback' => 'quastuvu1_callback',
    'type' => MENU_NORMAL_ITEM,
    );

  $items['ajout_nichoir'] = array(
    'title'           => t('Ajouter un nichoir'),
    'description'     => t('Ajouter un nichoir'),
    'menu_name'       => 'main-menu',
    'access arguments' => array('create nichoir content'),
    'weight'          => 5,
    'access callback' => 'user_access',
    'page callback' => 'ajout_nichoir_callback',
    'type' => MENU_NORMAL_ITEM,
    );

  $items['inscription'] = array(
    'title'           => t("S'inscrire"),
    'description'     => t('Inscription'),
    'menu_name'       => 'main-menu',
    'access arguments' => array('access content'),
    'weight'          => 10,
    'access callback' => 'user_is_anonymous',
    'page callback' => 'inscription_callback',
    'type' => MENU_NORMAL_ITEM,
    );

  $items['connexion'] = array(
    'title'           => t("Se connecter"),
    'description'     => t('Connexion'),
    'menu_name'       => 'main-menu',
    'access arguments' => array('access content'),
    'weight'          => 11,
    'access callback' => 'user_is_anonymous',
    'page callback' => 'connexion_callback',
    'type' => MENU_NORMAL_ITEM,
    );


  $items['nids/coordinate_conversion'] = array(
    'page callback' => 'nids_coordinate_conversion_callback',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
    );

  $items['nids/oiseaux_pics'] = array(
    'page callback' => 'ajax_oiseaux_pics_callback',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
    );
    
  $items['supprimer'] = array(
    'page callback' => 'myDelete',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
    );
    
  $items['supprimer/Oui'] = array(
    'title'           => t("Oui"),
    'description'     => t('Oui'),
    'weight'          => 1,
    'page callback' => 'my_delete',
    'menu_name' => 'delete_Menu',
    'access arguments' => array('access content'),
    'options' => array('obs_id'),
    'type' => MENU_NORMAL_ITEM,
    );
    
  $items['supprimer/Non'] = array(
    'title'           => t("Non"),
    'description'     => t('Non'),
    'weight'          => 2,
    'page callback' => 'my_ignored',
    'menu_name' => 'delete_Menu',
    'access arguments' => array('access content'),
    'type' => MENU_NORMAL_ITEM,
    );
  
  $items['explorer'] = array(
    'title'           => t('Explorer'),
    'description'     => t('Explorer'),
    'menu_name'       => 'main-menu',
    'access arguments' => array('create nichoir content'),
    'weight'          => 7,
    'access callback' => 'user_access',
    'type' => MENU_NORMAL_ITEM,
    'page callback' => 'nids_list',
    );


  $items['explorer/mes_nichoirs'] = array(
    'title'           => t('Mes nichoirs'),
    'description'     => t('Mes nichoirs'),
    'menu_name'       => 'main-menu',
    'access arguments' => array('create nichoir content'),
    'weight'          => 7,
    'access callback' => 'user_access',
    'type' => MENU_NORMAL_ITEM,
    'page callback' => 'nids_own_blocklist',
    );
   $items['explorer/observations_ma_cour'] = array(
    'title'           => t('Observations dans ma cour'),
    'description'     => t('Observations dans ma cour'),
    'menu_name'       => 'main-menu',
    'access arguments' => array('create nichoir content'),
    'weight'          => 8,
    'access callback' => 'user_access',
    'type' => MENU_NORMAL_ITEM,
    'page callback' => 'nids_block_mes_obs_oiseaux',
    );

  $items['explorer/liste_nids'] = array(
    'title'           => t('Liste complète des nichoirs'),
    'description'     => t('Liste complète des nichoirs'),
    'menu_name'       => 'main-menu',
    'access arguments' => array('create nichoir content'),
    'weight'          => 9,
    'access callback' => 'user_access',
    'type' => MENU_NORMAL_ITEM,
    'page callback' => 'nids_list',
    );

  $items['explorer/nids_obsv'] = array(
    'title'           => t('Observations dans les nichoirs'),
    'description'     => t('Observations dans les nichoirs'),
    'menu_name'       => 'main-menu',
    'access arguments' => array('delete all nichoir content'),
    'weight'          => 10,
    'access callback' => 'user_access',
    'type' => MENU_NORMAL_ITEM,
    'page callback' => 'nids_block_obsv_list',
    );
    
    //nids_oiseaux_cour_list
   $items['explorer/observation_oiseaux'] = array(
    'title'           => t('Observations dans les cours'),
    'description'     => t('Observations dans les cours'),
    'menu_name'       => 'main-menu',
    'access arguments' => array('delete all nichoir content'),
    'weight'          => 11,
    'access callback' => 'user_access',
    'type' => MENU_NORMAL_ITEM,
    'page callback' => 'nids_block_obs_oiseaux',
    );
    //nids_oiseaux_cour_list
  return $items;
}

function nids_preprocess_page(&$variables) {
  drupal_add_library('system', 'ui');
  drupal_add_library('system', 'ui.accordion');
  drupal_add_library('system', 'ui.autocomplete');
  drupal_add_library('system', 'ui.button');
  drupal_add_library('system', 'ui.datepicker');
  drupal_add_library('system', 'ui.dialog');
  drupal_add_library('system', 'ui.draggable');
  drupal_add_library('system', 'ui.droppable');
  drupal_add_library('system', 'ui.mouse');
  drupal_add_library('system', 'ui.position');
  drupal_add_library('system', 'ui.progressbar');
  drupal_add_library('system', 'ui.resizable');
  drupal_add_library('system', 'ui.selectable');
  drupal_add_library('system', 'ui.slider');
  drupal_add_library('system', 'ui.sortable');
  drupal_add_library('system', 'ui.tooltip');
  drupal_add_library('system', 'ui.tabs');
  drupal_add_library('system', 'ui.widget');
  $module_path = base_path().drupal_get_path('module', 'nids');
  drupal_add_js($module_path . '/javascript/nids.jqueryui_menu.js');
}

/**
 * Implements hook_theme().
 */
function nids_theme($existing, $type, $theme, $path) {

  $info['nids'] = array(
    'template' => 'nids',
    'render element' => 'elements',
    'path' => $path . '/templates'
    );


  $info['nids_geography'] = array(
    'template' => 'nids_',
    'render element' => 'element',
    'path' => $path . '/templates'
    );
  
  return $info;
}

function template_preprocess_nids(&$variables) {
  $data = $variables['elements']['#nids'];
  foreach ($data as $section => $fields) {
    foreach($fields as $key => $value) {
      if($key === 'geography') {
        $value = $data[$section][$key];
      } else {
        $value = (is_string($data[$section][$key])) ? check_plain($data[$section][$key]) : $data[$section][$key];
      }
      $variables['content'][$section][$key] = $value;
    }
  }
}


function nids_node_view($node, $view_mode, $langcode) {
  if(array_key_exists('dncv_no',$node) || array_key_exists('nom_nichoir',$node)){
	drupal_add_js('http://maps.google.com/maps/api/js?sensor=false');
	drupal_add_js(base_path().drupal_get_path('module', 'nids') . '/javascript/nids.map.js');
	drupal_add_js(array('nids_mode' => 'view'), 'setting');
	$myLocation = (!empty($node->ecole)) ? 'École: '.$node->ecole : 'Parc: '.$node->parc;
	if(empty($node->ecole) && empty($node->parc))
		$myLocation = 'Cours';
	$myHauteur = (empty($node->hauteur)) ? 'inconnu' : $node->hauteur.' m';
	$myHole = (empty($node->trou)) ? 'Diametre inconnu' : $node->trou.' cm';
	$ing="<input type='hidden' name='geography' value='".$node->geography."'>";
   $dncv=($node->dncv==1)?'Oui':'Non';
	$node->content['my_additional_field'] = array(
    '#markup' => $ing.'
    					<ul>
    						<div id="map" style="width: 900px;height: 500px;max-width: none;max-height:85%;"></div><br><br>
    						<li>Nichoir DNCV?: ' .$dncv.'</li>
    						<li>Numéro/Nom: ' . $node->dncv_no . ' ' .$node->nom_nichoir.'</li>
							<li>L\'Emplacement: '.$myLocation.'</li>
							<li>Date d\'Installation: '.$node->date_installation.'</li>
							<li>Habitat: '.$node->habitat.'</li>
							<li>Hauteur: '.$myHauteur.'</li>
							<li>Trou: '.$myHole.'</li>
							<li>Orientation: '.$node->orientation.'</li>
						</ul>',
    '#weight' => 10,
  );
	$node->content['field2'] = array(
    '#markup' => nids_obsv3(),
    '#weight' => 10,
  );  
} 
}

function nids_user_registration_validate($form, &$form_state){
  if (strpos($form_state['values']['valider'],'vous')===false){
    form_set_error('valider', t('Veuillez fournir la bonne réponse à la question de vérification!'));
  }
}


function nids_user_insert(&$edit, $account, $category) {
  db_insert('nids_users')->fields(array(
    'uid' => $account->uid,
    'nom_famille' => $edit['nom_famille'],
    'prenom' => $edit['prenom'],
    'ecole' => $edit['ecole'],
    'adresse' => $edit['adresse_civique'],
    'appartement' => $edit['adresse_appt'],
    'ville' => $edit['adresse_ville'],
    'code_postal' => $edit['adresse_code_postal'],
    'telephone' => $edit['telephone'],
    'mangeoires' => $edit['mangeoires'],
    'mangeoires_nombre' => ($edit['mangeoires_nombre']=='')?null:$edit['mangeoires_nombre'],
    ))->execute();
  db_insert('users_roles')->fields(array(
    'uid' => $account->uid,
    'rid' => $edit['type_utilisateur'],
    ))->execute();
  drupal_set_message('Vous êtes maintenant inscrit et connecté!','status');
}

function nids_user_update(&$edit, $account, $category) {
  db_update('nids_users')->fields(array(
    'nom_famille' => $edit['nom_famille'],
    'prenom' => $edit['prenom'],
    'ecole' => $edit['ecole'],
    'adresse' => $edit['adresse_civique'],
    'appartement' => $edit['adresse_appt'],
    'ville' => $edit['adresse_ville'],
    'code_postal' => $edit['adresse_code_postal'],
    'telephone' => $edit['telephone'],
    'mangeoires' => $edit['mangeoires'],
    'mangeoires_nombre' => ($edit['mangeoires_nombre']=='')?null:$edit['mangeoires_nombre'],
    ))->condition('uid', $account->uid,'=')->execute();
  $rid=db_select('users_roles','u')->fields('u',array('rid'))->execute()->fetchField();
  if($rid!=3){ // not already an admin!
    db_update('users_roles')->fields(array('rid' => $edit['type_utilisateur']))->condition('uid', $account->uid,'=')->execute();
  }
  drupal_set_message('Profil mis à jour!','status');
}



function nids_user_load($users) {
  $result = db_query('SELECT * FROM nids_users WHERE uid IN (:uids)', array(':uids' => array_keys($users)));
  foreach ($result as $record) {
    $users[$record->uid]->nom_famille = $record->nom_famille;
    $users[$record->uid]->prenom = $record->prenom;
    $users[$record->uid]->ecole = $record->ecole;
    $users[$record->uid]->adresse = $record->adresse;
    $users[$record->uid]->appartement = $record->appartement;
    $users[$record->uid]->ville = $record->ville;
    $users[$record->uid]->code_postal = $record->code_postal;
    $users[$record->uid]->telephone = $record->telephone;
    $users[$record->uid]->mangeoires = $record->mangeoires;
    $users[$record->uid]->mangeoires_nombre = $record->mangeoires_nombre;
  }
  $result = db_query('SELECT uid, rid FROM users_roles WHERE uid IN (:uids)', array(':uids' => array_keys($users)));
  foreach ($result as $record) {
    $users[$record->uid]->role = $record->rid;
  }
}



function nichoir_load($nodes) {
  	$cp=current_path();
	$isedit = strpos($cp,'edit');
	$isview = 0;
	
	if(!$isedit){
    $isview=1;
  }

	if($nodes[key($nodes)]->type=='nichoir' && $isedit) {
			global $user;
			$result = db_select('nids_nichoirs', 'n')->fields('n')
			->condition('n.nid', $nodes[key($nodes)]->nid, '=')
			->execute()
			->fetchAll();
			foreach ($result as $record){
				$nodes[key($nodes)]->uid = $record->uid;
				$nodes[key($nodes)]->dncv = $record->dncv;
				$nodes[key($nodes)]->dncv_no = $record->dncv_no;
			
				if ($record->parc!='')
     				$nodes[key($nodes)]->dans_un_parc_ecole = 'Parc';
	  			else if ($record->ecole!='')
	  				$nodes[key($nodes)]->dans_un_parc_ecole = 'École';
	  			if($record->ecole!='' && $record->parc!='')
	  				$nodes[key($nodes)]->dans_un_parc_ecole = 'Non';
	  			
				$nodes[key($nodes)]->ecole = $record->ecole;
				$nodes[key($nodes)]->parc = $record->parc;
				$nodes[key($nodes)]->nom_nichoir = $record->nom_nichoir;
				$nodes[key($nodes)]->geography = $record->geography;
				$nodes[key($nodes)]->date_installation = $record->date_installation;
				$nodes[key($nodes)]->habitat = $record->habitat;
				$nodes[key($nodes)]->hauteur = $record->hauteur;
				$nodes[key($nodes)]->trou = $record->trou;
				$nodes[key($nodes)]->orientation = $record->orientation;
				}
		}
	
		if($nodes[key($nodes)]->type=='nichoir' && $isview) {		
		global $user;
		$result = db_select('nids_nichoirs', 'n')->fields('n')
		->condition('n.nid', $nodes[key($nodes)]->nid, '=')
		->execute()
		->fetchAll();
		foreach ($result as $record){
			$nodes[key($nodes)]->uid = $user->uid;
			$nodes[key($nodes)]->dncv = $record->dncv;
			$nodes[key($nodes)]->dncv_no = $record->dncv_no;
			
			if ($record->parc!='')
     			$nodes[key($nodes)]->dans_un_parc_ecole = 'Parc';
	  		else if ($record->ecole!='')
	  			$nodes[key($nodes)]->dans_un_parc_ecole = 'École';
	  		if($record->ecole!='' && $record->parc!='')
	  			$nodes[key($nodes)]->dans_un_parc_ecole = 'Non';
	  			
			$nodes[key($nodes)]->ecole = $record->ecole;
			$nodes[key($nodes)]->parc = $record->parc;
			$nodes[key($nodes)]->nom_nichoir = $record->nom_nichoir;
			$nodes[key($nodes)]->geography = $record->geography;
			$nodes[key($nodes)]->date_installation = $record->date_installation;
			$nodes[key($nodes)]->habitat = $record->habitat;
			$nodes[key($nodes)]->hauteur = $record->hauteur;
			$nodes[key($nodes)]->trou = $record->trou;
			$nodes[key($nodes)]->orientation = $record->orientation;
			}	
		}
	return $nodes;
}

function myDelete(){
	$id=$_GET['id'];
	$type=$_GET['type'];
	$output=myText($id, $type);
	return $output;
}
function myText($id, $type){
	$options = array('absolute' => TRUE, 'query' => array('id' => $id, 'type' => $type));
  return 
   '<div>
  	<h1>Est-tu certain?</h1> 
	<li class="first leaf ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only" role="button" style="width: 300px; list-style-type: none; padding: 5px; margin: 5px;">
		<span class="ui-button-text">
        <a href='.url('supprimer/Oui', $options).'></a>
            Oui
        </a>
    	</span>
	</li>
	<li class="last leaf ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only" role="button" style="width: 300px; list-style-type: none; padding: 5px; margin: 5px;">
   	<span class="ui-button-text">
        <a href='.url('supprimer/Non', $options).'></a>
            Non
        </a>
   	</span>
	</li>
</div>';
  		
}

function quastuvu1_callback(){
  $output=drupal_render(menu_tree('quastuvu1')).plusdiv();
  return $output;
}


function quastuvu2_callback(){
  $output=drupal_render(menu_tree('quastuvu2')).plusdiv();
  return $output;
}
function quastuvu3_callback(){
  $output=drupal_render(menu_tree('quastuvu5')).plusdiv();
  return $output;
}

function plusdiv(){
  return '<div style="height:100px"></div>';
}

function ecole_callback(){
  return drupal_render(menu_tree('quastuvu5')).plusdiv();
}

function quastuvu4_callback(){
  return drupal_get_form('nids_obscour_form');
}

function nichoir_callback(){
  //$block = module_invoke('nids', 'block_view', 'form_nichoir');
  return drupal_get_form('nids_obsnichoir_form');//$block['content'];
}


function cour_callback(){
  return drupal_get_form('nids_obscour_form');
}

function ajout_nichoir_callback(){
  module_load_include('inc', 'node', 'node.pages');
  $form = node_add('nichoir'); 
  return drupal_render($form);
}

function ajax_parc_nichoir_callback($form, $form_state){
  return $form['nichoir'];
}

function inscription_callback(){
  $form = drupal_get_form('user_register_form');
  return drupal_render($form);
}

function connexion_callback(){
  $form = drupal_get_form('user_login');
  return drupal_render($form);
}


function ajax_ajout_oiseau_callback($form, $form_state) {
  return $form['oiseau'];
}

?>
