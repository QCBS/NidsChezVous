<?php
$GLOBALS['nids_dataset_fields'] = array(
  'overview' => array(
    'nichoirid',
    'userid',
    'typeobs',
    'obsval'
    ),
  );

/**
 * Implements hook_node_info().
 */
function nids_node_info() {
  $info = array();

  $info['nichoir'] = array(
    'name'        => t('nichoir'),
    'base'        => 'nichoir',
    'module'      => 'nids',
    'description' => t('Ajout observations nichoir.'),
    'has_body'    => FALSE
    );
  return $info;
}

function nids_init() {
  $module_path = base_path().drupal_get_path('module', 'nids');
  drupal_add_js(array(
    'nids_path' => $module_path,
    'nids_callback_base_url' => base_path().'nids'
    ), 'setting');
}

// Implementation of hook_menu(): used to create a page for the form
function nids_menu() {
  $items = array();
  $items['cour'] = array(
    'title'           => t('Dans ta cour'),
    'description'     => t('Dans ta cour'),
    'menu_name'       => 'quastuvu1',
    'access arguments' => array('access content'),
    'weight'          => 3,
    'access callback' => 'user_access',
    'page callback' => 'quastuvu2_callback',
    'type' => MENU_NORMAL_ITEM,
  );
  $items['parc'] = array(
    'title'           => t('Dans un parc'),
    'description'     => t('Dans un parc'),
    'menu_name'       => 'quastuvu1',
    'access arguments' => array('access content'),
    'weight'          => 3,
    'access callback' => 'user_access',
    'page callback' => 'quastuvu3_callback',
    'type' => MENU_NORMAL_ITEM,
  );
  $items['nichoir'] = array(
    'title'           => t('Dans ton nichoir'),
    'description'     => t('Dans ton nichoir'),
    'menu_name'       => 'quastuvu2',
    'access arguments' => array('access content'),
    'weight'          => 3,
    'access callback' => 'user_access',
    'page callback' => 'nichoir_callback',
    'type' => MENU_NORMAL_ITEM,
    );
  $items['nichoir_parc'] = array(
    'title'           => t('Dans un nichoir dans un parc'),
    'description'     => t('Dans un nichoir dans un parc'),
    'menu_name'       => 'quastuvu3',
    'access arguments' => array('access content'),
    'weight'          => 4,
    'access callback' => 'user_access',
    'page callback' => 'nichoir_parc_callback',
    'type' => MENU_NORMAL_ITEM,
    );

  $items['mangeoire_parc'] = array(
    'title'           => t('Dans une mangeoire dans un parc'),
    'description'     => t('Dans une mangeoire dans un parc'),
    'menu_name'       => 'quastuvu3',
    'access arguments' => array('access content'),
    'weight'          => 5,
    'access callback' => 'user_access',
    'page callback' => 'mangeoire_callback',
    'type' => MENU_NORMAL_ITEM,
    );
  $items['mangeoire'] = array(
    'title'           => t('Dans ta mangeoire'),
    'description'     => t('Dans ta mangeoire'),
    'menu_name'       => 'quastuvu2',
    'access arguments' => array('access content'),
    'weight'          => 5,
    'access callback' => 'user_access',
    'page callback' => 'mangeoire_callback',
    'type' => MENU_NORMAL_ITEM,
    );

  $items['cour_obs'] = array(
    'title'           => t('Oiseau observé dans ta cour'),
    'description'     => t('Dans ta cour'),
    'menu_name'       => 'quastuvu2',
    'access arguments' => array('access content'),
    'weight'          => 6,
    'access callback' => 'user_access',
    'page callback' => 'cour_callback',
    'type' => MENU_NORMAL_ITEM,
    );

  $items['observation'] = array(
    'title'           => t('Ajouter une observation'),
    'description'     => t('Dans ta cour'),
    'menu_name'       => 'main-menu',
    'access arguments' => array('access content'),
    'weight'          => 7,
    'access callback' => 'user_access',
    'page callback' => 'quastuvu1_callback',
    'type' => MENU_NORMAL_ITEM,
    );

  $items['ajout_nichoir'] = array(
    'title'           => t('Ajouter un nichoir'),
    'description'     => t('Ajouter un nichoir'),
    'menu_name'       => 'main-menu',
    'access arguments' => array('access content'),
    'weight'          => 5,
    'access callback' => 'user_access',
    'page callback' => 'ajout_nichoir_callback',
    'type' => MENU_NORMAL_ITEM,
    );

  $items['inscription'] = array(
    'title'           => t("S'inscrire"),
    'description'     => t('Inscription'),
    'menu_name'       => 'main-menu',
    'access arguments' => array('access content'),
    'weight'          => 4,
    'access callback' => 'user_access',
    'page callback' => 'inscription_callback',
    'type' => MENU_NORMAL_ITEM,
    );


  $items['nids/coordinate_conversion'] = array(
    'page callback' => 'nids_coordinate_conversion_callback',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
    );


  return $items;
}

function nids_preprocess_page(&$variables) {
  drupal_add_library('system', 'ui');
  drupal_add_library('system', 'ui.accordion');
  drupal_add_library('system', 'ui.autocomplete');
  drupal_add_library('system', 'ui.button');
  drupal_add_library('system', 'ui.datepicker');
  drupal_add_library('system', 'ui.dialog');
  drupal_add_library('system', 'ui.draggable');
  drupal_add_library('system', 'ui.droppable');
  drupal_add_library('system', 'ui.mouse');
  drupal_add_library('system', 'ui.position');
  drupal_add_library('system', 'ui.progressbar');
  drupal_add_library('system', 'ui.resizable');
  drupal_add_library('system', 'ui.selectable');
  drupal_add_library('system', 'ui.slider');
  drupal_add_library('system', 'ui.sortable');
  drupal_add_library('system', 'ui.tooltip');
  drupal_add_library('system', 'ui.tabs');
  drupal_add_library('system', 'ui.widget');
  $module_path = base_path().drupal_get_path('module', 'nids');
  drupal_add_js($module_path . '/javascript/nids.jqueryui_menu.js');
}

function nids_form_alter(&$form, &$form_state, $form_id) {

  if($form_id == 'nichoir_node_form') {

    drupal_add_js(array('nids_mode' => 'edit'), 'setting');

    $form['geo'] = array(
      '#title' => t(''),
      '#type' => 'fieldset',
      );
    $form['geo']['location_name'] = array(
      '#title' => t('Entrez ton adresse (e.g. 21 Saint Germain Ouest, Rimouski, G5L 4B4)'),
      '#type' => 'textfield',
      '#size' => 100,
      '#required' => FALSE,
      '#prefix' => '<div class="nidsbox"><h2>'.t('Lieu du nichoir').'</h2>',
      '#suffix' => '<div id="noloc" style="display:none;">'.t('Ce nom ne peut être reconnu!').'</div><button type="button" id="addbynamebut">'.t('Ajouter un marqueur à cet endroit sur la carte (OPTION 1)').'</button>',
      '#default_value' => isset($form['#node']->nichoir['site_details']['location_name']) ? $form['#node']->nichoir['site_details']['location_name'] : ""
      );

    $form['geo']['geography'] = array(
      '#title' => t('Lieu du nichoir'),
      '#type' => 'hidden',
      '#size' => 200,
      '#required' => FALSE,
      '#default_value' => isset($form['#node']->nichoir['site_details']['geography']) ? $form['#node']->nichoir['site_details']['geography'] : "",
      '#suffix' => '<h3>'.t('Situer le nichoir sur la carte').'</h3>
      <p>'.t('Si vous les connaissez, ajouter les coordonnées géographiques du nichoir en format latitude, longitude dans cette boîte (e.g. 48.3732, -68.7041).').'
        <br><input type="text" id="inputcoords" style="display:inline;width:200px;">
        <button type="button" id="inputcoordsbut" class="nids-button" style="display:inline;" >'.t('Ajouter un marqueur à cette position sur la carte (OPTION 3)').'</button>
        <div id="coorderror" style="display:none;">'.t('Coordonnées non reconnues!').'</div>
      </p>',
      '#prefix' => '<p>
      <button type="button" id="pointbut">'.t('Ajouter un nichoir en cliquant sur la carte (OPTION 2)').'</button>
      <button type="button" id="nids-clear">'.t('Effacer').'</button>
    </p>
    <div id="map" style="width:700px;height:500px;"></div></div>'
    );

    $form['date'] = array(
      '#type' => 'date_popup',
      '#date_format' => 'Y-m-d',
      '#size' => 30,
      '#title' => "Date de l'installation du nichoir",
      '#required' => TRUE,
      );

    $form['numero'] = array(
      '#title' => t("Quel est le numéro du nichoir?"),
      '#type' => 'textfield',
      '#required' => TRUE,
      '#default_value' => '',
      );

    $form['habitat'] = array(
      '#title' => t("Le nichoir est fixé à..."),
      '#type' => 'select',
      '#required' => TRUE,
      '#default_value' => '',
      '#options' => array(
        'choisir' => 'Choisir...',
        'batiment' => 'bâtiment',
        'arbre' => 'arbre',
        'cloture' => 'clôture',
        'poteau' => 'poteau',
        ),
      );

    $form['hauteur'] = array(
      '#title' => t("À quelle hauteur est situé le nichoir (en mètres)?"),
      '#type' => 'textfield',
      '#required' => TRUE,
      '#default_value' => '',
      '#size'=> 30,
      );

    $form['orientation'] = array(
      '#title' => t("Orientation du nichoir"),
      '#type' => 'select',
      '#options' => array(
        'Choisir' => 'Choisir...',
        'Nord' => 'Nord',
        'Sud' => 'Sud',
        'Est' => 'Est',
        'Ouest' => 'Ouest',
        'Inconnue' => 'Inconnue',
        ),
      '#required' => TRUE,
      '#default_value' => 'Choisir',
      );

    $module_path = base_path().drupal_get_path('module', 'nids');

    $js_files = array(
      'http://maps.google.com/maps/api/js?sensor=false',
      $module_path . '/javascript/nids.map.js',
      $module_path . '/javascript/selectboxit.js',
      $module_path . '/javascript/nids.jqueryui.js',      
      );
    $form['#attached']['js'] = $js_files;
    $form['#validate'][] = 'nichoir_form_validate';
    $form['#submit'][] = 'nichoir_form_submit';
    $form['additional_settings']['#access'] = FALSE;
    $form['options']['status']['#default_value'] = TRUE;
    $form['options']['status']['#input'] = TRUE;
    $form['options']['status']['#return_value'] = TRUE;
    $form['options']['status']['#value'] = TRUE;
    $form['options']['status']['#checked'] = TRUE;
    drupal_set_title(t("Ajouter un nichoir"));
    return $form;

    }else if($form_id == 'user_register_form') {

      $form['type_utilisateur'] = array(
        '#title' => t("S'insrire en tant que..."),
        '#type' => 'select',
        '#options' => array(
          'enfant' => 'Enfant',
          'representant_scolaire' => 'Représentant scolaire',
          'citoyen' => 'Citoyen',
          'chercheur' => 'Chercheur scientifique',
        ),
        '#required' => TRUE,
        '#default_value' => 'Choisir',
      );

      $form['ecole'] = array(
        '#title' => t("Nom de l'école"),
        '#type' => 'select',
        '#options' => array(
          'Choisir' => 'Choisir...',
          'rose_des_vents' => 'École Rose des Vents',
          'des_sources' => 'École des Sources',
          'du_rocher_auteuil' => 'École du Rocher-Auteuil',
          'des_sources' => 'École Mont Saint-Louis',
          'saint_rosaire' => 'École Saint-Rosaire',
        ),
        '#required' => FALSE,
        '#states' => array(
          'visible' => array(
            ':input[name="type_utilisateur"]' => array(
              array('value' => 'enfant'),
              array('value' => 'representant_scolaire'),
              ),
          ),
        ),
      );
      $form['prenom'] = array(
        '#title' => t("Prénom"),
        '#type' => 'textfield',
        '#required' => TRUE,
        '#default_value' => '',
        '#size'=> 30,
        );
      $form['nom_famille'] = array(
        '#title' => t("Nom de famille"),
        '#type' => 'textfield',
        '#required' => TRUE,
        '#default_value' => '',
        '#size'=> 30,
        );
      $form['telephone'] = array(
        '#title' => t("Numéro de téléphone (optionnel)"),
        '#type' => 'textfield',
        '#required' => FALSE,
        '#default_value' => '',
        '#size'=> 30,
        );
      $form['adresse'] = array(
        '#title' => t("Adresse"),
        '#type' => 'textfield',
        '#required' => FALSE,
        '#default_value' => '',
        '#size'=> 30,
        );
      return $form;
    }
}



// Form builder. Form ID = function name
function nids_obsnichoir_form($form, &$form_state) {

  $form['nichoir'] = array(
    '#title' => t("Pour quel nichoir?"),
    '#type' => 'select',
    '#options' => array(
      'Choisir' => 'Choisir...',
      123 => 123,
      221 => 221,
      ),
    '#required' => TRUE,
    '#default_value' => 'Choisir',
    );

  $form['date'] = array(
    '#type' => 'date_popup',
    '#date_format' => 'Y-m-d H:i',
    '#size' => 30,
    '#title' => "Date et heure de l'observation",
    '#required' => TRUE,
    '#states' => array(
      'visible' => array(
        ':input[name="nichoir"]' => array('!value' => 'Choisir'),
        ),
      ),
    );

  $form['espece'] = array(
    '#title' => t("Quelle espèce?"),
    '#type' => 'select',
    '#options' => array(
      'Choisir' => 'Choisir...',
      'Moineau_domestique' => 'Moineau domestique',
      'Hirondelle_bicolore' => 'Hirondelle bicolore',
      'Mesange_a_tete_noire' => 'Mésange à tête noire',
      'Mesange_brune' => 'Mésange brune',
      'Inconnue' => 'Inconnue',
      'Autre' => 'Autre'
      ),
    '#required' => TRUE,
    '#default_value' => 'Choisir',
    '#states' => array(
      'visible' => array(
        ':input[name="nichoir"]' => array('!value' => 'Choisir'),
        ),
      ),
    );


  $form['espece_autre'] = array(
    '#type' => 'textfield',
    '#size' => 70,
    '#title' => '<h4>'.t("Veuillez préciser l'espèce...").'</h4>',
    '#states' => array(
      'visible' => array(
        ':input[name="espece"]' => array('value' => 'Autre'),
        ':input[name="nichoir"]' => array('!value' => 'Choisir'),
        ),
      ),
    );

  $form['type_obs'] = array(
    '#title' => t("Type d'observation"),
    '#type' => 'radios',
    '#size' => 50,
    '#required' => FALSE,
    '#options' => array(
      1 => t('Entrée ou sortie du nichoir pour la première fois'),
      2 => t('Apport de brindilles'),
      3 => t("Activités menant à la conception éventuelle d'un bébé"),
      4 => t('Sons de poussins, quémande alimentaire'),
      5 => t('Alimentation des poussins par les parents (bec avec des chenilles, etc.)'),
      6 => t('Parent en attente près du nichoir'),
      7 => t('Oiseau chante sur nichoir'),
      8 => t('Les oiseaux ne visitent plus le nichoir'),
      9 => t('Indiquer un nombre de visites au nichoir pendant 5 minutes'),
      10 => t('Autre'),
      ),
    '#states' => array(
      'visible' => array(
        ':input[name="espece"]' => array('!value' => 'Choisir'),
        ),
      ),

    );

  $form['type_obs_autre'] = array(
    '#type' => 'textfield',
    '#size' => 70,
    '#title' => '<h4>'.t("Veuillez préciser...").'</h4>',
    '#states' => array(
      'visible' => array(
        ':input[name="type_obs"]' => array('value' => 10),
        ':input[name="espece"]' => array('!value' => 'Choisir'),
        ),
      ),
    );

  $form['nombre_visite'] = array(
    '#type' => 'textfield',
    '#size' => 70,
    '#title' => '<h4>'.t("Indiquer le nombre de visites au nichoir enregistrées pendant une période de 5 minutes...").'</h4>',
    '#states' => array(
      'visible' => array(
        ':input[name="type_obs"]' => array('value' => 9),
        ':input[name="espece"]' => array('!value' => 'Choisir'),
        ),
      ),
    );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t("Ajouter l'observation!"),
    '#states' => array(
      'visible' => array(
        ':input[name="type_obs"]' => array('!value' => false),
        ':input[name="espece"]' => array('!value' => 'Choisir'),
        ),
      ),
    );

  $module_path = base_path().drupal_get_path('module', 'nids');

  $js_files = array(
    $module_path . '/javascript/nids.jqueryui.js',
    $module_path . '/javascript/selectboxit.js',
    );
  $form['#attached']['js'] = $js_files;
  $form['#validate'][] = 'nids_form_validate';
  $form['#submit'][] = 'nids_form_submit';
  $form['title']['#title'] = 'Ajouter un nichoir';
  return $form;
}

function nids_obsmangeoire_form($form, &$form_state) {

  $form['mangeoire'] = array(
    '#title' => t("Pour quel mangeoire?"),
    '#type' => 'select',
    '#options' => array(
      'Choisir' => 'Choisir...',
      123 => 123,
      221 => 221,
      ),
    '#required' => TRUE,
    '#default_value' => 'Choisir',
    );

  $form['date'] = array(
    '#type' => 'date_popup',
    '#date_format' => 'Y-m-d H:i',
    '#size' => 30,
    '#title' => "Date et heure de l'observation",
    '#required' => TRUE,
    '#states' => array(
      'visible' => array(
        ':input[name="mangeoire"]' => array('!value' => 'Choisir'),
        ),
      ),
    );

  $form['espece'] = array(
    '#title' => t("Quelle espèce?"),
    '#type' => 'select',
    '#options' => array(
      'Choisir' => 'Choisir...',
      'Moineau_domestique' => 'Moineau domestique',
      'Mesange_a_tete_noire' => 'Mésange à tête noire',
      'Mesange_brune' => 'Mésange brune',
      'Quiscale_bronze' => 'Quiscale bronzé',
      'Etourneau' => 'Étourneau sansonnet',
      'Cardinal' => 'Cardinal',
      'Sizerin_flamme' => 'Sizerin flammé',
      'Inconnue' => 'Inconnue',
      'Autre' => 'Autre'
      ),
    '#required' => TRUE,
    '#default_value' => 'Choisir',
    '#states' => array(
      'visible' => array(
        ':input[name="mangeoire"]' => array('!value' => 'Choisir'),
        ),
      ),
    );

  $form['nombre_visite'] = array(
    '#type' => 'textfield',
    '#size' => 70,
    '#title' => '<h4>'.t("Indiquer le nombre de visites au nichoir enregistrées pendant une période de 5 minutes...").'</h4>',
    '#states' => array(
      'visible' => array(
        ':input[name="espece"]' => array('!value' => 'Choisir'),
        ),
      ),
    );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t("Ajouter l'observation!"),
    '#states' => array(
      'visible' => array(
        ':input[name="type_obs"]' => array('!value' => false),
        ':input[name="espece"]' => array('!value' => 'Choisir'),
        ),
      ),
    );

  $module_path = base_path().drupal_get_path('module', 'nids');

  $js_files = array(
    $module_path . '/javascript/nids.jqueryui.js',
    $module_path . '/javascript/selectboxit.js',
    );
  $form['#attached']['js'] = $js_files;
  $form['#validate'][] = 'nids_form_validate';
  $form['#submit'][] = 'nids_form_submit';
  return $form;
}

function nids_obscour_form($form, &$form_state) {
  $form['date'] = array(
    '#type' => 'date_popup',
    '#date_format' => 'Y-m-d H:i',
    '#size' => 30,
    '#title' => "Date et heure de l'observation",
    '#required' => TRUE,
    );

  $form['espece'] = array(
    '#title' => t("Quelle espèce?"),
    '#type' => 'select',
    '#options' => array(
      'Choisir' => 'Choisir...',
      'Moineau_domestique' => 'Moineau domestique',
      'Mesange_a_tete_noire' => 'Mésange à tête noire',
      'Mesange_brune' => 'Mésange brune',
      'Quiscale_bronze' => 'Quiscale bronzé',
      'Etourneau' => 'Étourneau sansonnet',
      'Cardinal' => 'Cardinal',
      'Sizerin_flamme' => 'Sizerin flammé',
      'Inconnue' => 'Inconnue',
      'Autre' => 'Autre'
      ),
    '#required' => TRUE,
    '#default_value' => 'Choisir',
    );

  $form['nombre'] = array(
    '#type' => 'textfield',
    '#size' => 70,
    '#title' => '<h4>'.t("Indiquer le nombre d'indivius observés de cette espèce...").'</h4>',
    '#states' => array(
      'visible' => array(
        ':input[name="espece"]' => array('!value' => 'Choisir'),
        ),
      ),
    );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t("Ajouter l'observation!"),
    '#states' => array(
      'visible' => array(
        ':input[name="type_obs"]' => array('!value' => false),
        ':input[name="espece"]' => array('!value' => 'Choisir'),
        ),
      ),
    );

  $module_path = base_path().drupal_get_path('module', 'nids');

  $js_files = array(
    $module_path . '/javascript/nids.jqueryui.js',
    $module_path . '/javascript/selectboxit.js',
    );
  $form['#attached']['js'] = $js_files;
  $form['#validate'][] = 'nids_form_validate';
  $form['#submit'][] = 'nids_form_submit';
  return $form;
}



// Form validation handler.
function nichoir_form_validate($form, &$form_state) {
  //do validation here if necessary
}

// Form submit handler.
function nichoir_form_submit($form, &$form_state) {
}


function nichoir_insert($node) {
}

function nichoir_update($node) {
}

function nichoir_delete($node) {
}

function nichoir_load($nodes) {
}

function _nids_fields($node) {
}



/**
 * Implements hook_block_info().
 */
function nids_block_info() {
}

/**
 * Implements hook_block_view().
 */
function nids_block_view($block_name = '') {
}

function quastuvu1_callback(){
  return menu_tree('quastuvu1');
}

function quastuvu2_callback(){
  return menu_tree('quastuvu2');
}

function quastuvu3_callback(){
  return menu_tree('quastuvu3');
}

function nichoir_callback(){
  //$block = module_invoke('nids', 'block_view', 'form_nichoir');
  return drupal_get_form('nids_obsnichoir_form');//$block['content'];
}

function nichoir_parc_callback(){
  //$block = module_invoke('nids', 'block_view', 'form_nichoir');
  return drupal_get_form('nids_obsnichoir_form');//$block['content'];
}

function mangeoire_callback(){
  return drupal_get_form('nids_obsmangeoire_form');
}

function cour_callback(){
  return drupal_get_form('nids_obscour_form');
}

function ajout_nichoir_callback(){
  module_load_include('inc', 'node', 'node.pages');
  $form = node_add('nichoir'); 
  return drupal_render($form);
}

function inscription_callback(){
  $form = drupal_get_form('user_register_form');
  return drupal_render($form);
}


function nids_coordinate_conversion_callback($string = "") {
  $converted_coordinates = array();
  $input = ($string) ? $string : _remove_empty_lines($_POST['coordinates']);
  $coordinates = explode("\n", $input);
  foreach($coordinates as $coordinate) {
    if(!array_key_exists($coordinate, $converted_coordinates)) {
      $converted = _make_coordinates($coordinate);
      $status = (_check_coordinate($converted)) ? 'success' : 'fail';
      $converted_coordinates[$coordinate] = array(
        'status' => $status,
        'converted' => $converted
        );
    }
  }
  drupal_json_output($converted_coordinates);
}

function _remove_empty_lines($string) {
  return preg_replace("/(^[\r\n]*|[\r\n]+)[\s\t]*[\r\n]+/", "\n", $string);
}

function _make_coordinates($point) {
  $loc = preg_replace('/\t/', '|', $point); //replace tabs with pipes
  $loc = preg_replace('/[\p{Z}\s]/u', ' ', $loc); //remove all extra spaces
  $loc = trim(preg_replace('/[^\|\d\s,;.\-NSEWO°ºdms\'"]/i', '', $loc));
  if(preg_match('/[NSEWO]/', $loc) != 0) {
    $coord = preg_split("/[\|,;]/", $loc); //split the coords by a pipe, comma, semicolon
    if (!array_key_exists(1, $coord)) { return array(null, null); }
    $coord = (preg_match('/[EWO]/', $coord[1]) != 0) ? $coord : array_reverse($coord);
    return array(_dms_to_deg(trim($coord[0])),_dms_to_deg(trim($coord[1])));
  } else {
    return preg_split("/[\|\s,;]+/",$loc); //split the coords by a pipe, space, comma, semicolon
  }
}


function _dms_to_deg($dms) {
  $dms = stripslashes($dms);
  $neg = (preg_match('/[SWO]/i', $dms) == 0) ? 1 : -1;
  $dms = preg_replace('/(^\s?-)|(\s?[NSEWO]\s?)/i','', $dms);
  $pattern = "/(\\d*\\.?\\d+)(?:[°ºd: ]+)(\\d*\\.?\\d+)*(?:['m′: ])*(\\d*\\.?\\d+)*[\"s″ ]?/i";
  $parts = preg_split($pattern, $dms, 0, PREG_SPLIT_NO_EMPTY | PREG_SPLIT_DELIM_CAPTURE);
  if (!$parts) { return; }
  // parts: 0 = degree, 1 = minutes, 2 = seconds
  $d = isset($parts[0]) ? (float)$parts[0] : 0;
  $m = isset($parts[1]) ? (float)$parts[1] : 0;
  if(strpos($dms, ".") > 1 && isset($parts[2])) {
    $m = (float)($parts[1] . '.' . $parts[2]);
    unset($parts[2]);
  }
  $s = isset($parts[2]) ? (float)$parts[2] : 0;
  $dec = ($d + ($m/60) + ($s/3600))*$neg; 
  return $dec;
}

function _check_coordinate($coord) {
  $output = false;
  if(is_numeric($coord[0])
    && is_numeric($coord[1])
    && $coord[0] <= 90 
    && $coord[0] >= -90 
    && $coord[1] <= 180 
    && $coord[1] >= -180) { $output = true; }
    return $output;
}


?>
