<?php
/**
 * Implements hook_node_info().
 */
function nids_node_info() {
  $info = array();

  $info['nichoir'] = array(
    'name'        => t('nichoir'),
    'base'        => 'nichoir',
    'module'      => 'nids',
    'description' => t('Ajout observations nichoir.'),
    'has_body'    => true
    );
  return $info;
}

function nids_init() {
  $module_path = base_path().drupal_get_path('module', 'nids');
  drupal_add_js(array(
    'nids_path' => $module_path,
    'nids_callback_base_url' => base_path().'nids'
    ), 'setting');
}

// Implementation of hook_menu(): used to create a page for the form
function nids_menu() {
  $items = array();
  $items['cour'] = array(
    'title'           => t('Dans ta cour'),
    'description'     => t('Dans ta cour'),
    'menu_name'       => 'quastuvu1',
    'access arguments' => array('access content'),
    'weight'          => 3,
    'access callback' => 'user_access',
    'page callback' => 'quastuvu2_callback',
    'type' => MENU_NORMAL_ITEM,
    );
  $items['parc'] = array(
    'title'           => t('Dans un nichoir dans un parc'),
    'description'     => t('Dans un nichoir dans un parc'),
    'menu_name'       => 'quastuvu1',
    'access arguments' => array('access content'),
    'weight'          => 3,
    'access callback' => 'user_access',
    'page callback' => 'nichoir_callback',
    'type' => MENU_NORMAL_ITEM,
    );
  $items['ecole'] = array(
    'title'           => t("À une école"),
    'description'     => t('À une école'),
    'menu_name'       => 'quastuvu1',
    'access arguments' => array('access content'),
    'weight'          => 3,
    'access callback' => 'user_access',
    'page callback' => 'ecole_callback',
    'type' => MENU_NORMAL_ITEM,
    );

  $items['nichoir_ecole'] = array(
    'title'           => t('Dans un nichoir dans une cour d\'école'),
    'description'     => t('Dans un nichoir dans une cour d\'école'),
    'menu_name'       => 'quastuvu5',
    'access arguments' => array('access content'),
    'weight'          => 4,
    'access callback' => 'user_access',
    'page callback' => 'nichoir_callback',
    'type' => MENU_NORMAL_ITEM,
    );

  $items['ecole_obs'] = array(
    'title'           => t('Oiseau(x) observé(s) dans la cour d\'une école'),
    'description'     => t('Oiseau(x) observé(s) dans la cour d\'une école'),
    'menu_name'       => 'quastuvu5',
    'access arguments' => array('access content'),
    'weight'          => 4,
    'access callback' => 'user_access',
    'page callback' => 'cour_callback',
    'type' => MENU_NORMAL_ITEM,
    );


  $items['nichoir'] = array(
    'title'           => t('Dans ton nichoir'),
    'description'     => t('Dans ton nichoir'),
    'menu_name'       => 'quastuvu2',
    'access arguments' => array('access content'),
    'weight'          => 3,
    'access callback' => 'user_access',
    'page callback' => 'nichoir_callback',
    'type' => MENU_NORMAL_ITEM,
    );
  $items['nichoir_parc'] = array(
    'title'           => t('Dans un nichoir dans un parc'),
    'description'     => t('Dans un nichoir dans un parc'),
    'menu_name'       => 'quastuvu3',
    'access arguments' => array('access content'),
    'weight'          => 4,
    'access callback' => 'user_access',
    'page callback' => 'nichoir_parc_callback',
    'type' => MENU_NORMAL_ITEM,
    );

  $items['cour_obs'] = array(
    'title'           => t('Oiseau(x) observé(s) dans ta cour'),
    'description'     => t('Dans ta cour'),
    'menu_name'       => 'quastuvu2',
    'access arguments' => array('access content'),
    'weight'          => 6,
    'access callback' => 'user_access',
    'page callback' => 'cour_callback',
    'type' => MENU_NORMAL_ITEM,
    );

  $items['observation'] = array(
    'title'           => t('Ajouter une observation'),
    'description'     => t('Dans ta cour'),
    'menu_name'       => 'main-menu',
    'access arguments' => array('create nichoir content'),
    'weight'          => 7,
    'access callback' => 'user_access',
    'page callback' => 'quastuvu1_callback',
    'type' => MENU_NORMAL_ITEM,
    );

  $items['ajout_nichoir'] = array(
    'title'           => t('Ajouter un nichoir'),
    'description'     => t('Ajouter un nichoir'),
    'menu_name'       => 'main-menu',
    'access arguments' => array('create nichoir content'),
    'weight'          => 5,
    'access callback' => 'user_access',
    'page callback' => 'ajout_nichoir_callback',
    'type' => MENU_NORMAL_ITEM,
    );

  $items['inscription'] = array(
    'title'           => t("S'inscrire"),
    'description'     => t('Inscription'),
    'menu_name'       => 'main-menu',
    'access arguments' => array('access content'),
    'weight'          => 10,
    'access callback' => 'user_is_anonymous',
    'page callback' => 'inscription_callback',
    'type' => MENU_NORMAL_ITEM,
    );

  $items['connexion'] = array(
    'title'           => t("Se connecter"),
    'description'     => t('Connexion'),
    'menu_name'       => 'main-menu',
    'access arguments' => array('access content'),
    'weight'          => 11,
    'access callback' => 'user_is_anonymous',
    'page callback' => 'connexion_callback',
    'type' => MENU_NORMAL_ITEM,
    );


  $items['nids/coordinate_conversion'] = array(
    'page callback' => 'nids_coordinate_conversion_callback',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
    );

  $items['explorer'] = array(
    'title'           => t('Explorer'),
    'description'     => t('Explorer'),
    'menu_name'       => 'main-menu',
    'access arguments' => array('create nichoir content'),
    'weight'          => 7,
    'access callback' => 'user_access',
    'type' => MENU_NORMAL_ITEM,
    'page callback' => 'nids_list',
    );


  $items['explorer/mes_nichoirs'] = array(
    'title'           => t('Mes nichoirs'),
    'description'     => t('Mes nichoirs'),
    'menu_name'       => 'main-menu',
    'access arguments' => array('create nichoir content'),
    'weight'          => 7,
    'access callback' => 'user_access',
    'type' => MENU_NORMAL_ITEM,
    'page callback' => 'own_nichoirs_list',
    );

  $items['explorer/liste_nids'] = array(
    'title'           => t('Liste complète des nichoirs'),
    'description'     => t('Liste complète des nichoirs'),
    'menu_name'       => 'main-menu',
    'access arguments' => array('create nichoir content'),
    'weight'          => 8,
    'access callback' => 'user_access',
    'type' => MENU_NORMAL_ITEM,
    'page callback' => 'nids_list',
    );


  $items['explorer/nids_obsv'] = array(
    'title'           => t('Observations dans les nichoirs'),
    'description'     => t('Observations dans les nichoirs'),
    'menu_name'       => 'main-menu',
    'access arguments' => array('delete all nichoir content'),
    'weight'          => 9,
    'access callback' => 'user_access',
    'type' => MENU_NORMAL_ITEM,
    'page callback' => 'nids_block_obsv_list',
    );
    
    //nids_oiseaux_cour_list
   $items['explorer/observation_oiseaux'] = array(
    'title'           => t('Observations dans les cours'),
    'description'     => t('Observations dans les cours'),
    'menu_name'       => 'main-menu',
    'access arguments' => array('delete all nichoir content'),
    'weight'          => 9,
    'access callback' => 'user_access',
    'type' => MENU_NORMAL_ITEM,
    'page callback' => 'nids_block_obs_oiseaux',
    );
  return $items;
}

function nids_preprocess_page(&$variables) {
  drupal_add_library('system', 'ui');
  drupal_add_library('system', 'ui.accordion');
  drupal_add_library('system', 'ui.autocomplete');
  drupal_add_library('system', 'ui.button');
  drupal_add_library('system', 'ui.datepicker');
  drupal_add_library('system', 'ui.dialog');
  drupal_add_library('system', 'ui.draggable');
  drupal_add_library('system', 'ui.droppable');
  drupal_add_library('system', 'ui.mouse');
  drupal_add_library('system', 'ui.position');
  drupal_add_library('system', 'ui.progressbar');
  drupal_add_library('system', 'ui.resizable');
  drupal_add_library('system', 'ui.selectable');
  drupal_add_library('system', 'ui.slider');
  drupal_add_library('system', 'ui.sortable');
  drupal_add_library('system', 'ui.tooltip');
  drupal_add_library('system', 'ui.tabs');
  drupal_add_library('system', 'ui.widget');
  $module_path = base_path().drupal_get_path('module', 'nids');
  drupal_add_js($module_path . '/javascript/nids.jqueryui_menu.js');
}

/**
 * Implements hook_theme().
 */
function nids_theme($existing, $type, $theme, $path) {

  $info['nids'] = array(
    'template' => 'nids',
    'render element' => 'elements',
    'path' => $path . '/templates'
    );


  $info['nids_geography'] = array(
    'template' => 'nids_',
    'render element' => 'element',
    'path' => $path . '/templates'
    );
  
  return $info;
}

function template_preprocess_nids(&$variables) {
  $data = $variables['elements']['#nids'];
  foreach ($data as $section => $fields) {
    foreach($fields as $key => $value) {
      if($key === 'geography') {
        $value = $data[$section][$key];
      } else {
        $value = (is_string($data[$section][$key])) ? check_plain($data[$section][$key]) : $data[$section][$key];
      }
      $variables['content'][$section][$key] = $value;
    }
  }
}


function nids_form_alter(&$form, &$form_state, $form_id) {

  if($form_id == 'nichoir_node_form') {
    drupal_add_js(array('nids_mode' => 'edit'), 'setting');

    $form['dncv'] = array(
      '#title' => t("Est-ce un nichoir construit par Des nids chez vous?"),
      '#type' => 'select',
      '#required' => TRUE,
      '#default_value' => isset($form['#node']->dncv) ? $form['#node']->dncv : "",
      '#options' => array(
        1 => 'Oui',
        0 => 'Non',
        ),
      );

    $form['numero'] = array(
      '#title' => t("Quel est le numéro du nichoir?"),
      '#type' => 'textfield',
      '#required' => FALSE,
      '#size' => 15,
      '#default_value' => isset($form['#node']->dncv_no) ? $form['#node']->dncv_no : "",
      '#states' => array(
        'visible' => array(
          ':input[name="dncv"]' => array('value' => 1)
          ),
        ),
      );

    $form['nom_nichoir'] = array(
      '#title' => t("Quel nom voulez-vous donner à ce nichoir (par ex. cabanon, bouleau)?"),
      '#type' => 'textfield',
      '#size' => 35,
      '#required' => FALSE,
      '#default_value' => isset($form['#node']->nom_nichoir) ? $form['#node']->nom_nichoir : "",
      '#states' => array(
        'visible' => array(
          ':input[name="dncv"]' => array('value' => 0)
          ),
        ),
      );

    global $user;
    $user_role=db_select('users_roles','r')
    ->fields('r',array('rid'))
    ->condition('uid', $user->uid,'=')
    ->execute()
    ->fetchField();

    $isscientist=($user_role==3 || $user_role==6);
    $form['scientist'] = array(
      '#type' => 'hidden',
    //'#default_value' => $user_role,
      '#default_value' => ($isscientist?1:0),
      );


    $form['dans_un_parc_ecole'] = array(
      '#title' => t("Est-ce un dans une école ou dans un parc?"),
      '#type' => 'select',
      '#options' => array( 
        'Non' => 'Non',
        'Parc' => 'Parc',
        'École' => 'École',
        ),
      '#required' => FALSE,
      '#default_value' => isset($form['#node']->dans_un_parc_ecole) ? $form['#node']->dans_un_parc_ecole : "",
      '#states' => array(
        'visible' => array(
          ':input[name="scientist"]' => array('value' => 1),
          )
        ),
      );
    $form['parc'] = array(
      '#title' => t("Pour quel parc?"),
      '#type' => 'select',
      '#options' => array(
        null => 'Choisir...',
        //'Lepage' => 'Lepage',
        'Parc Beauséjour' => 'Parc Beauséjour',
        'Parc La gare' => 'Parc La gare',
        'Parc Mont-Saint-Louis' => 'Parc Mont-Saint Louis',
        'Parc Mairie Saint-Anaclet' => 'Parc Mairie Saint-Anaclet',
        'Bibliothèque Lisette-Morin' =>'Bibliothèque Lisette-Morin',
        ),
      '#required' => FALSE,
      '#states' => array(
        'visible' => array(
          ':input[name="scientist"]' => array('value' => 1),
          ':input[name="dans_un_parc_ecole"]' => array('value' => 'Parc'),
          )
        ),
      '#default_value' => isset($form['#node']->parc) ? $form['#node']->parc : "",
      );

    $form['ecole'] = array(
      '#title' => t("Nom de l'école"),
      '#type' => 'select',
      '#options' => array(
        null => 'Choisir...',
        'École Rose des Vents' => 'École Rose des Vents',
        'École des Sources' => 'École des Sources',
        'École du Rocher-Auteuil' => 'École du Rocher-Auteuil',
        'École Mont Saint-Louis' => 'École Mont Saint-Louis',
        'École Saint-Rosaire' => 'École Saint-Rosaire',
        ),
      '#required' => FALSE,
      '#states' => array(
        'visible' => array(
          ':input[name="scientist"]' => array('value' => 1),
          ':input[name="dans_un_parc_ecole"]' => array('value' => 'École'),
          )
        ),
        '#default_value' => isset($form['#node']->ecole) ? $form['#node']->ecole : "",
      );


    $form['geo'] = array(
      '#title' => t(''),
      '#type' => 'fieldset',
      );

    $adresse=db_select('nids_users','n')
    ->fields('n')
    ->condition('uid',$user->uid,'=')
    ->execute();

    if ($adresse->rowCount()>0){
      $adresse=$adresse->fetchAssoc();
      $add=$adresse['adresse'].', '.$adresse['code_postal'].', '.$adresse['ville'];
    }else{
      $add='';
    }
    $form['geo']['location_name'] = array(
      '#type' => 'hidden',
      '#size' => 100,
      '#required' => FALSE,
      '#prefix' => '<div id="adresse" style="display:none;">'.$add.'</div><div class="nidsbox"></div><h2>'.t('Lieu du nichoir').'</h2>',
      //'#suffix' => '<div id="noloc" style="display:none;">'.t('Ce nom ne peut être reconnu!').'</div><button type="button" id="addbynamebut">'.t('Ajouter un marqueur à cet endroit sur la carte (OPTION 1)').'</button>',
      '#default_value' => isset($form['#node']->nichoir['site_details']['location_name']) ? $form['#node']->nichoir['site_details']['location_name'] : ""
      );

    $form['geo']['geography'] = array(
      '#title' => t('Lieu du nichoir'),
      '#type' => 'hidden',
      '#size' => 200,
      '#required' => FALSE,
      '#default_value' => isset($form['#node']->nichoir['site_details']['geography']) ? $form['#node']->nichoir['site_details']['geography'] : "",
      /*'#suffix' => '<h3>'.t('<strong>ou</strong>, si vous les connaissez, ajouter les coordonnées géographiques du nichoir en format latitude, longitude dans cette boîte (e.g. 48.3732, -68.7041).</h3>').'
      <br><input type="text" id="inputcoords" style="display:inline;width:200px;">
      <button type="button" id="inputcoordsbut" class="nids-button" style="display:inline;" >'.t('Ajouter un marqueur à ces coordonnées sur la carte').'</button>
      <div id="coorderror" style="display:none;">'.t('Coordonnées non reconnues!').'</div>
    </p>',
    */
    '#prefix' => '<h3>'.t('Situe le nichoir en déplacant le marqueur (icône de nichoir orange) sur la carte').'</h3><div id="map" style="width:700px;height:500px;"></div></div>',
    
    /*<p><button type="button" id="pointbut">'.t('Ajoute un nichoir en cliquant sur la carte').'</button>
    <button type="button" id="nids-clear">'.t('Effacer').'</button>
  </p>*/
  );

$form['date_installation'] = array(
  '#type' => 'date_popup',
  '#date_format' => 'Y-m-d',
  '#size' => 30,
  '#datepicker_options' => array('maxDate' => date('Y-m-d H:i')),
  '#title' => "Date de l'installation du nichoir",
  '#required' => FALSE,
  '#default_value' => isset($form['#node']->date_installation) ? $form['#node']->date_installation : ""
  );

$form['habitat'] = array(
  '#title' => t("Le nichoir est fixé à..."),
  '#type' => 'select',
  '#required' => FALSE,
  '#default_value' => isset($form['#node']->habitat) ? $form['#node']->habitat : "",
  '#options' => array(
    'choisir' => 'Choisir...',
    'batiment' => 'bâtiment',
    'arbre' => 'arbre',
    'cloture' => 'clôture',
    'poteau' => 'poteau',
    ),
  );

$form['hauteur'] = array(
  '#title' => t("À quelle hauteur est situé le nichoir (en mètres)?"),
  '#type' => 'textfield',
  '#required' => FALSE,
  '#default_value' => isset($form['#node']->hauteur) ? $form['#node']->hauteur : "",
  '#size'=> 30,
  );

$form['trou'] = array(
  '#title' => t("Quelle est la taille du trou (en centimètres) dans le nichoir?"),
  '#type' => 'textfield',
  '#required' => FALSE,
  '#default_value' => isset($form['#node']->trou) ? $form['#node']->trou : "",
  '#states' => array(
     'visible' => array(
       ':input[name="dncv"]' => array('value' => 0)
      ),
  ),
  '#size'=> 30,
  );

$form['orientation'] = array(
  '#title' => t("Orientation du nichoir"),
  '#type' => 'select',
  '#options' => array(
    null => 'Choisir...',
    'Nord' => 'Nord',
    'Sud' => 'Sud',
    'Est' => 'Est',
    'Ouest' => 'Ouest',
    'Nord_est' => 'Nord-Est',
    'Nord_ouest' => 'Nord-Ouest',
    'Sud_est' => 'Sud-Est',
    'Sud_ouest' => 'Sud-Ouest',
    'Inconnue' => 'Inconnue',
    ),
  '#required' => FALSE,
  '#default_value' => isset($form['#node']->orientation) ? $form['#node']->orientation : "",
  );

$module_path = base_path().drupal_get_path('module', 'nids');

$js_files = array(
  'http://maps.google.com/maps/api/js?sensor=false',
  $module_path . '/javascript/nids.map.js',
  $module_path . '/javascript/selectboxit.js',
  $module_path . '/javascript/nids.jqueryui.js',      
  );
$form['#attached']['js'] = $js_files;
$form['#validate'][] = 'nichoir_form_validate';
$form['#submit'][] = 'nichoir_form_submit';
$form['additional_settings']['#access'] = FALSE;
$form['options']['status']['#default_value'] = TRUE;
$form['options']['status']['#input'] = TRUE;
$form['options']['status']['#return_value'] = TRUE;
$form['options']['status']['#value'] = TRUE;
$form['options']['status']['#checked'] = TRUE;
drupal_set_title(t("Ajouter un nichoir"));
return $form;
}else if($form_id == 'user_register_form' | $form_id == 'user_profile_form'){
  //debug($form_state['user']);
  $form['type_utilisateur'] = array(
    '#title' => t("S'insrire en tant que..."),
    '#type' => 'select',
    '#options' => array(
      4 => 'Enfant',
      5 => 'Représentant scolaire',
      7 => 'Citoyen',
      //6 => 'Chercheur scientifique',
      ),
    '#required' => TRUE,
    '#default_value' => isset($form_state['user']->role) ? $form_state['user']->role : "",
    );

  $form['ecole'] = array(
    '#title' => t("Nom de l'école"),
    '#type' => 'select',
    '#options' => array(
      null => 'Choisir...',
      'École Rose des Vents' => 'École Rose des Vents',
      'École des Sources' => 'École des Sources',
      'École du Rocher-Auteuil' => 'École du Rocher-Auteuil',
      'École Mont Saint-Louis' => 'École Mont Saint-Louis',
      'École Saint-Rosaire' => 'École Saint-Rosaire',
      ),
    '#required' => FALSE,
    '#default_value' => isset($form_state['user']->ecole) ? $form_state['user']->ecole : "",
    '#states' => array(
      'visible' => array(
        ':input[name="type_utilisateur"]' => array(
          array('value' => 4),
          array('value' => 5),
          ),
        ),
      ),
    );
  $form['prenom'] = array(
    '#title' => t("Prénom"),
    '#type' => 'textfield',
    '#required' => TRUE,
    '#default_value' => isset($form_state['user']->prenom) ? $form_state['user']->prenom : "",
    '#size'=> 30,
    );
  $form['nom_famille'] = array(
    '#title' => t("Nom de famille"),
    '#type' => 'textfield',
    '#required' => TRUE,
    '#default_value' => isset($form_state['user']->nom_famille) ? $form_state['user']->nom_famille : "",
    '#size'=> 30,
    );
  $form['telephone'] = array(
    '#title' => t("Numéro de téléphone (optionnel)"),
    '#type' => 'textfield',
    '#required' => FALSE,
    '#default_value' => isset($form_state['user']->telephone) ? $form_state['user']->telephone : "",
    '#size'=> 30,
    );

  $form['adresse'] = array(
    '#title' => t("Adresse"),
    '#type' => 'fieldset',
    '#required' => FALSE,
    '#size'=> 30,
    '#tree' =>FALSE,
    '#states' => array(
      'invisible' => array(
        ':input[name="type_utilisateur"]' => array('value' => 5))),
    );
  $form['adresse']['adresse_civique'] = array(
    '#title' => t("Numéro civique et rue (ex. 145 rue Chambord)"),
    '#type' => 'textfield',
    '#required' => FALSE,
    '#default_value' => isset($form_state['user']->adresse) ? $form_state['user']->adresse : "",
    '#size'=> 30,
    );
  $form['adresse']['adresse_appt'] = array(
    '#title' => t("Appartement (si applicable)"),
    '#type' => 'textfield',
    '#required' => FALSE,
    '#default_value' => isset($form_state['user']->appartement) ? $form_state['user']->appartement : "",
    '#size'=> 10,
    );
  $form['adresse']['adresse_ville'] = array(
    '#title' => t("Ville"),
    '#type' => 'textfield',
    '#required' => FALSE,
    '#default_value' => isset($form_state['user']->ville) ? $form_state['user']->ville : "",
    '#size'=> 30,
    );
  $form['adresse']['adresse_code_postal'] = array(
    '#title' => t("Code postal"),
    '#type' => 'textfield',
    '#required' => FALSE,
    '#default_value' => isset($form_state['user']->code_postal) ? $form_state['user']->code_postal : "",
    '#size'=> 30,
    );

  $form['mangeoires'] = array(
    '#title' => t("Est-ce que vous avez une/des mangeoire(s) pour les oiseaux dans votre cour?"),
    '#type' => 'select',
    '#default_value' => isset($form_state['user']->mangeoires) ? $form_state['user']->mangeoires : "",
    '#options' => array( 
      0 => 'Non', 
      1 => 'Oui',
      ),
    '#required' => FALSE,
    );

  $form['mangeoires_nombre'] = array(
    '#title' => t("Combien de mangeoires avez-vous?"),
    '#type' => 'textfield',
    '#required' => FALSE,
    '#default_value' => isset($form_state['user']->mangeoires_nombre) ? $form_state['user']->mangeoires_nombre : "",
    '#size'=> 30,
    '#states' => array(
      'visible' => array(
        ':input[name="mangeoires"]' => array('value' => 1))),
    );

  $form['valider'] = array(
    '#title' => t("Question de vérification: compléter le nom du projet 'Des nids chez ....'"),
    '#type' => 'textfield',
    '#required' => FALSE,
    '#default_value' => '',
    '#size'=> 30,
    );
  $form['#validate'][] = 'nids_user_registration_validate';
  return $form;

}
}

function nids_node_view($node, $view_mode, $langcode) {
  if(array_key_exists('dncv_no',$node) || array_key_exists('nom_nichoir',$node)){
	drupal_add_js('http://maps.google.com/maps/api/js?sensor=false');
	drupal_add_js(base_path().drupal_get_path('module', 'nids') . '/javascript/nids.map.js');
	drupal_add_js(array('nids_mode' => 'view'), 'setting');
	
	$myLocation = (!empty($node->ecole)) ? 'École: '.$node->ecole : 'Parc: '.$node->parc;
	if(empty($node->ecole) && empty($node->parc))
		$myLocation = 'Cours';
	$myHauteur = (empty($node->hauteur)) ? 'inconnu' : $node->hauteur.' m';
	$myHole = (empty($node->trou)) ? 'Diametre inconnu' : $node->trou.' cm';
	$ing="<input type='hidden' name='geography' value='".$node->geography."'>";
	$node->content['my_additional_field'] = array(
    '#markup' => $ing.'
    					<ul>
    						<div id="map" style="width: 900px;height: 500px;max-width: none;max-height:85%;"></div><br><br>
    						<li>Nichoir DNCV?:' . ($node-­>dncv)?'Oui':'Non</li> 
    						<li>Numéro/Nom: ' . $node->dncv_no . ' ' .$node->nom_nichoir.'</li>
							<li>L\'Emplacement: '.$myLocation.'</li>
							<li>Date d\'Installation: '.$node->date_installation.'</li>
							<li>Habitat: '.$node->habitat.'</li>
							<li>Hauteur: '.$myHauteur.'</li>
							<li>Trou: '.$myHole.'</li>
							<li>Orientation: '.$node->orientation.'</li>
						</ul>',
    '#weight' => 10,
  );
	$node->content['field2'] = array(
    '#markup' => nids_obsv3(),
    '#weight' => 10,
  );  
}  
}

// Form builder. Form ID = function name
function nids_obsnichoir_form($form, &$form_state) {

  $path=drupal_get_path_alias(current_path());
  
  $form['parc_ecole_check'] = array(
    '#type' => 'hidden',
    '#default_value' => $path,
    );

  $form['parc'] = array(
    '#title' => t("Pour quel parc?"),
    '#type' => 'select',
    '#options' => array(
      null => 'Choisir...',
      'Beauséjour' => 'Beauséjour',
      'La gare' => 'La gare',
      'Mont-Saint-Louis' => 'Mont-Saint Louis',
      'Mairie Saint-Anaclet' => 'Mairie Saint-Anaclet',
      'Bibliothèque Lisette-Morin' =>'Bibliothèque Lisette-Morin',
      ),
    '#required' => FALSE,
    '#states' => array(
      'visible' => array(
        ':input[name="parc_ecole_check"]' => array('value' => 'parc'),
        )
      ),
    '#ajax' => array(
      'callback' => 'ajax_parc_nichoir_callback',
      'wrapper' => 'nichoir_fs',
      'method' => 'replace',
      'effect' => 'fade',
      ),
    '#default_value' => 'Choisir',
    );


  $form['ecole'] = array(
    '#title' => t("Pour quelle école?"),
    '#type' => 'select',
    '#options' => array(
      null => 'Choisir...',
      'École Rose des Vents' => 'École Rose des Vents',
      'École des Sources' => 'École des Sources',
      'École du Rocher-Auteuil' => 'École du Rocher-Auteuil',
      'École Mont Saint-Louis' => 'École Mont Saint-Louis',
      'École Saint-Rosaire' => 'École Saint-Rosaire',
      ),
    '#required' => FALSE,
    '#states' => array(
      'visible' => array(
        ':input[name="parc_ecole_check"]' => array('value' => 'nichoir_ecole'),
        )
      ),
    '#ajax' => array(
      'callback' => 'ajax_parc_nichoir_callback',
      'wrapper' => 'nichoir_fs',
      'method' => 'replace',
      'effect' => 'fade',
      ),
    '#default_value' => 'Choisir',
    );


  global $user;
  $nidsopts=array(0 => 'Choisir....');
  if(!array_key_exists('values',$form_state)){
    $form_state['values']['parc']='nothing';
    $form_state['values']['ecole']='nothing';
  }
  if($path==='parc'){
    $nichoirs=db_select('nids_nichoirs','n')
    ->fields('n')
    ->condition('parc',$form_state['values']['parc'],'=')
    ->execute();
  }else if ($path==='nichoir_ecole'){
    $nichoirs=db_select('nids_nichoirs','n')
    ->fields('n')
    ->condition('ecole',$form_state['values']['ecole'],'=')
    ->execute();
  }else{
    $nichoirs=db_select('nids_nichoirs','n')
    ->fields('n')
    ->condition('uid',$user->uid,'=')
    ->execute();
  }
  if ($nichoirs->rowCount()>0){
    for ($i=1;$i<=$nichoirs->rowCount();$i++) {
      $nic=$nichoirs->fetchAssoc();
      if ($nic['dncv_no']===null){
        $nidsopts=$nidsopts + array($nic['nid']=>$nic['nom_nichoir']);
      }else{
        $nidsopts=$nidsopts + array($nic['nid']=>$nic['dncv_no']);
      }
    }
  }


  $form['nichoir_fs'] =array(
    '#title_display' => 'invisible',
    '#type' => 'fieldset',
    '#prefix' => '<div id="nichoir_fs">',
    '#suffix' => '</div>',
    '#tree' => FALSE,
    );


  $form['nichoir_fs']['nichoir'] = array(
    '#title' => t("Pour quel nichoir?"),
    '#type' => 'select',
    '#options' => $nidsopts,
    '#required' => TRUE,
    '#default_value' => 0,
    );

  $form['date'] = array(
    '#type' => 'date_popup',
    '#date_format' => 'Y-m-d H:i',
    '#size' => 30,
    '#title' => "Date et heure (sur 24h) de l'observation",
    '#required' => TRUE,
    '#datepicker_options' => array('maxDate' => date('Y-m-d H:i')),
    );


  $form['rien_vu'] = array(
    '#title' => t("Je n'ai rien vu"),
    '#type' => 'checkbox',
    '#required' => FALSE,
    '#states' => array(
      'visible' => array(
        ':input[name="date"]' => array('!value' => null),
        ),
      ),
    );


  $form['espece'] = array(
    '#title' => t("Quelle espèce?"),
    '#type' => 'select',
    '#options' => array(
      null => 'Choisir...',
      'Moineau domestique' => 'Moineau domestique',
      'Hirondelle bicolore' => 'Hirondelle bicolore',
      'Mésange à tête noire' => 'Mésange à tête noire',
      'Mésange brune' => 'Mésange brune',
      'Sitelle à poitrine rousse' => 'Sitelle à poitrine rousse',
      'Merlebleu de l\'Est' => 'Merlebleu de l\'Est',
      'Inconnue' => 'Inconnue',
      'Autre' => 'Autre'
      ),
    '#required' => false,
    '#default_value' => 'Choisir',
    '#states' => array(
      'visible' => array(
        ':input[name="rien_vu"]' => array('checked' => FALSE),
        ),
      ),
    );


  $form['espece_autre'] = array(
    '#type' => 'textfield',
    '#size' => 70,
    '#title' => '<h4>'.t("Veuillez préciser l'espèce:").'</h4>',
    '#states' => array(
      'visible' => array(
        ':input[name="espece"]' => array('value' => 'Autre'),
        ':input[name="nichoir"]' => array('!value' => 0),
        ),
      ),
    );

  $form['type_obs'] = array(
    '#title' => t("Type d'observation"),
    '#type' => 'radios',
    '#size' => 50,
    '#required' => FALSE,
    '#options' => _nichoir_type_observation(),
    '#states' => array(
      'visible' => array(
        //':input[name="esp"]' => array('!value' => 'Choisir'),
        ':input[name="rien_vu"]' => array('checked' => FALSE),
        ),
      ),

    );

  $form['type_obs_autre'] = array(
    '#type' => 'textfield',
    '#size' => 70,
    '#title' => '<h4>'.t("Veuillez préciser.").'</h4>',
    '#states' => array(
      'visible' => array(
        ':input[name="type_obs"]' => array('value' => 10),
        ':input[name="espece"]' => array('!value' => 'Choisir'),
        ),
      ),
    );

$form['submit'] = array(
  '#type' => 'submit',
  '#value' => t("Ajouter l'observation!"),
  '#states' => array(
    'visible' => array(
      ':input[name="date"]' => array('!value' => ''),
      ),
    ),
  '#suffix' => '<div style="height:100px;"></div>',
  );

$module_path = base_path().drupal_get_path('module', 'nids');

$js_files = array(
  $module_path . '/javascript/nids.jqueryui.js',
  $module_path . '/javascript/selectboxit.js',
  );
$form['#attached']['js'] = $js_files;
$form['#validate'][] = 'nids_obsnichoir_form_validate';
$form['#submit'][] = 'nids_obsnichoir_form_submit';
$form['title']['#title'] = 'Ajouter un nichoir';
return $form;
}

function nids_obscour_form($form, &$form_state) {
  $form['date'] = array(
    '#type' => 'date_popup',
    '#date_format' => 'Y-m-d H:i',
    '#size' => 30,
    '#title' => "Date et heure de l'observation",
    '#datepicker_options' => array('maxDate' => date('Y-m-d H:i')),
    '#required' => TRUE,
    );

  $form['rien_vu'] = array(
    '#title' => t("Je n'ai rien vu"),
    '#type' => 'checkbox',
    '#required' => FALSE,
    );

  $form['duree_obs'] = array(
    '#type' => 'textfield',
    '#size' => 50,
    '#title' => '<h4>'.t("Indiquer la durée de la période d'observation (en minutes).").'</h4>',
    '#required' => TRUE,
    );

  $form['oiseau'] = array(
    '#type' => 'fieldset',
    '#title_display' => 'invisible',
    '#prefix' => '<div id="oiseaux-div"><table style="border:0px;background:white;">',
    '#suffix' => '</table></div>',
    '#tree' =>FALSE
    );

  $numoiseaux=0;
  if(array_key_exists('values',$form_state)){
    foreach ($form_state['values'] as $key => $value) {
      if (strpos($key,"espece_") !== false) {
        $numoiseaux++;
      }
    }
  }

  for ($i=0; $i<=$numoiseaux; $i++){
    $form['oiseau']['espece_'.$i] = array(
      '#title' => t("Quelle espèce?"),
      '#type' => 'select',
      '#states' => array(
        'visible' => array(
          ':input[name="rien_vu"]' => array('checked' => FALSE),
          ),
        ),
      '#options' => _observation_oiseaux(),
'#required' => FALSE,
'#multiple' => TRUE,
'#size' => 10,
'#prefix' => '<tr><td><div class="sameline">',
'#suffix' => '</div>',
);
$form['oiseau']['nombre_individus_'.$i] = array(
  '#type' => 'textfield',
  '#size' => 10,
  '#title' => '<h4>'.t("Indiquer le nombre d'individus observés (approximatif pour les grands nombres)").'</h4>',
  '#suffix' => '</td></tr>',
  '#states' => array(
    'visible' => array(
      ':input[name="rien_vu"]' => array('checked' => FALSE),
      ),
    ),
  );
}


$form['ajout_espece'] = array(
  '#type' => 'submit',
  '#value' => t("Autre espèce observée"),
  '#states' => array(
    'visible' => array(
      ':input[name="rien_vu"]' => array('checked' => FALSE),
      ),
    ),
  '#executes_submit_callback' => FALSE,
  '#ajax' => array(
    'callback' => 'ajax_ajout_oiseau_callback',
    'wrapper' => 'oiseaux-div',
    'method' => 'replace',
    'effect' => 'fade',
    ),
  );



$form['submit'] = array(
  '#type' => 'submit',
  '#value' => t("Ajouter l'observation!"),
  '#suffix' => '<div style="height:100px;"></div>',
  );

$module_path = base_path().drupal_get_path('module', 'nids');

$js_files = array(
  $module_path . '/javascript/nids.jqueryui.js',
  $module_path . '/javascript/selectboxit.js',
  );
$form['#attached']['js'] = $js_files;
$form['#validate'][] = 'cour_form_validate';
$form['#submit'][] = 'cour_form_submit';
return $form;
}


function nids_user_registration_validate($form, &$form_state){
  if (strpos($form_state['values']['valider'],'vous')===false){
    form_set_error('valider', t('Veuillez fournir la bonne réponse à la question de vérification!'));
  }
}


function nids_user_insert(&$edit, $account, $category) {
  db_insert('nids_users')->fields(array(
    'uid' => $account->uid,
    'nom_famille' => $edit['nom_famille'],
    'prenom' => $edit['prenom'],
    'ecole' => $edit['ecole'],
    'adresse' => $edit['adresse_civique'],
    'appartement' => $edit['adresse_appt'],
    'ville' => $edit['adresse_ville'],
    'code_postal' => $edit['adresse_code_postal'],
    'telephone' => $edit['telephone'],
    'mangeoires' => $edit['mangeoires'],
    'mangeoires_nombre' => ($edit['mangeoires_nombre']=='')?null:$edit['mangeoires_nombre'],
    ))->execute();
  db_insert('users_roles')->fields(array(
    'uid' => $account->uid,
    'rid' => $edit['type_utilisateur'],
    ))->execute();
  drupal_set_message('Vous êtes maintenant inscrit et connecté!','status');
}

function nids_user_update(&$edit, $account, $category) {
  db_update('nids_users')->fields(array(
    'nom_famille' => $edit['nom_famille'],
    'prenom' => $edit['prenom'],
    'ecole' => $edit['ecole'],
    'adresse' => $edit['adresse_civique'],
    'appartement' => $edit['adresse_appt'],
    'ville' => $edit['adresse_ville'],
    'code_postal' => $edit['adresse_code_postal'],
    'telephone' => $edit['telephone'],
    'mangeoires' => $edit['mangeoires'],
    'mangeoires_nombre' => ($edit['mangeoires_nombre']=='')?null:$edit['mangeoires_nombre'],
    ))->condition('uid', $account->uid,'=')->execute();
  $rid=db_select('users_roles','u')->fields('u',array('rid'))->execute()->fetchField();
  if($rid!=3){ // not already an admin!
    db_update('users_roles')->fields(array('rid' => $edit['type_utilisateur']))->condition('uid', $account->uid,'=')->execute();
  }
  drupal_set_message('Profil mis à jour!','status');
}



function nids_user_load($users) {
  $result = db_query('SELECT * FROM nids_users WHERE uid IN (:uids)', array(':uids' => array_keys($users)));
  foreach ($result as $record) {
    $users[$record->uid]->nom_famille = $record->nom_famille;
    $users[$record->uid]->prenom = $record->prenom;
    $users[$record->uid]->ecole = $record->ecole;
    $users[$record->uid]->adresse = $record->adresse;
    $users[$record->uid]->appartement = $record->appartement;
    $users[$record->uid]->ville = $record->ville;
    $users[$record->uid]->code_postal = $record->code_postal;
    $users[$record->uid]->telephone = $record->telephone;
    $users[$record->uid]->mangeoires = $record->mangeoires;
    $users[$record->uid]->mangeoires_nombre = $record->mangeoires_nombre;
  }
  $result = db_query('SELECT uid, rid FROM users_roles WHERE uid IN (:uids)', array(':uids' => array_keys($users)));
  foreach ($result as $record) {
    $users[$record->uid]->role = $record->rid;
  }
}



// Form validation handler.
function nichoir_form_validate($form, &$form_state) {
 if (is_numeric($form_state['values']['hauteur'])==false & $form_state['values']['hauteur']!='') {
  form_set_error('hauteur', t('Veuillez entrer un chiffre pour la hauteur!'));
}
 if ($form_state['values']['numero']=='' & $form_state['values']['nom_nichoir']=='') {
  form_set_error('numero', t('Veuillez spécifier un nom ou un numéro au nichoir!'));
}

}

// Form submit handler.
function nichoir_insert($node) {
  global $user; 
  db_insert('nids_nichoirs')->fields(array(
	 'nid' => $node->nid,    
    'uid' => $node->uid,
    'dncv' => $node->dncv,
    'dncv_no' => ($node->numero =='')?null:$node->numero,
    'ecole' => $node->ecole,
    'parc' => $node->parc,
    'nom_nichoir' => $node->nom_nichoir,
    'geography' => $node->geography,
    'date_installation' => $node->date_installation,
    'habitat' => $node->habitat,
    'hauteur' => ($node->hauteur =='')?null:$node->hauteur,
    'trou' => ($node->trou=='')?null:$node->trou,
    'orientation' => $node->orientation,
    ))->execute();
	drupal_set_message('Nichoir ajouté!','status');
	drupal_goto('explorer/mes_nichoirs');
}


// Form submit handler.
function nichoir_form_submit($form, &$form_state) {
if ($form_state['values']['numero']==''){
  $form_state['values']['title']=$form_state['values']['nom_nichoir'];
}else{
  $form_state['values']['title']=$form_state['values']['numero'];
}
}

// Form validation handler.
function cour_form_validate($form, &$form_state) {
  //do validation here if necessary
}

// Form submit handler.
function cour_form_submit($form, &$form_state) {
  global $user;
  $numoiseaux=0;
  foreach ($form_state['values'] as $key => $value) {
    if (strpos($key,"espece_") !== false) {
      $numoiseaux++;
    }
  }
  for($i=0;$i<$numoiseaux;$i++)
  {
    db_insert('nids_oiseaux_cour')->fields(array(
      'uid' => $user->uid,
      'date_obs' => $form_state['values']['date'],
      'rien_vu' => $form_state['values']['rien_vu'],
      'duree_obs' => ($form_state['values']['duree_obs']=='')?null:$form_state['values']['duree_obs'],
      'oiseau_espece' => key($form_state['values']['espece_'.$i]),
      'nombre_individus' => ($form_state['values']['nombre_individus_'.$i]=='')?null:$form_state['values']['nombre_individus_'.$i],
      )
    )->execute();
  }
  drupal_set_message('Observation ajoutée!','status');
 drupal_goto('observation');
}

function nids_obsnichoir_form_validate($form, &$form_state){
}

function nids_obsnichoir_form_submit($form, &$form_state){
  global $user;
  db_insert('nids_nichoirs_obs')->fields(array(
    'uid' => $user->uid,
    'nid_id' => $form_state['values']['nichoir'],
    'date_obs' => $form_state['values']['date'],
    'rien_vu' => $form_state['values']['rien_vu'],
    'type_obs' => $form_state['values']['type_obs'],
    'type_obs_autre' => $form_state['values']['type_obs_autre'],
    'oiseau_espece' => $form_state['values']['espece'],
    'oiseau_espece_autre' => $form_state['values']['espece_autre'],
    )
  )->execute();
  drupal_set_message('Observation ajoutée!','status');
  drupal_goto('observation');
}

function nichoir_update($node) {
	if($node->type=='nichoir'){
  	db_update('nids_nichoirs')->fields(array(
	 'nid' => $node->nid,    
    'uid' => $node->uid,
    'dncv' => $node->dncv,
    'dncv_no' => ($node->numero =='')?null:$node->numero,
    'ecole' => ($node->ecole=='')?null:$node->ecole,
    'parc' => ($node->parc=='')?null:$node->parc,
    'nom_nichoir' => ($node->nom_nichoir=='')?null:$node->nom_nichoir,
    'geography' => $node->geography,
    'date_installation' => $node->date_installation,
    'habitat' => $node->habitat,
    'hauteur' => ($node->hauteur =='')?null:$node->hauteur,
    'trou' => ($node->trou=='')?null:$node->trou,
    'orientation' => $node->orientation,
    ))->condition('nid', $node->nid, '=')
    ->execute();
		}
  drupal_set_message('Nichoir mis à jour!');
	drupal_goto('observation');
}

function nichoir_delete($node) {
  db_delete('nids_nichoirs')->condition('nid', $node->nid)->execute();
  db_delete('nids_nichoirs_obs')->condition('nid_id', $node->nid)->execute();
}


function nids_form_validate($form, &$form_state){

}


/**
 * Implements hook_block_view().
 */
function nids_block_obs_oiseaux(){
	$block = module_invoke('nids', 'block_view', 'nids_oiseaux_cour_list');
	return $block['content'];
}

function nids_obsv3(){
	$block = module_invoke('nids', 'block_view', 'nids_nichoirs_obs_list_view');
	return $block['content'];
}
function nids_block_obsv_list(){ 
	$block = module_invoke('nids', 'block_view', 'nids_nichoirs_obs_list');
	return $block['content'];
}

function nids_blocklist(){
  $block = module_invoke('nids', 'block_view', 'nids_list_nichoirs');
  return $block['content'];
}

function nids_own_blocklist(){
  $block = module_invoke('nids', 'block_view', 'nids_list_own_nichoirs');
  return $block['content'];
}

function nids_list(){
  $output=nids_map(900,500).nids_blocklist();
  return $output;
}

function own_nichoirs_list(){
  $output=nids_own_blocklist();
  return $output;
}

function nids_map($width,$height){
  drupal_add_js('http://maps.google.com/maps/api/js?sensor=false');
  drupal_add_js(base_path().drupal_get_path('module', 'nids') . '/javascript/nids.map.js');
  drupal_add_js(array('nids_mode' => 'view'), 'setting');
  $query = db_select('nids_nichoirs', 'n')->fields('n',array('nid', 'uid', 'dncv', 'dncv_no', 
    'nom_nichoir', 'parc', 'ecole', 'geography', 'date_installation', 'habitat', 'hauteur', 'orientation'));
  $result = $query->execute();
  $output='';
  $geog=array();
  foreach($result as $n){
    $nob = db_select('nids_nichoirs_obs', 'n')->fields('n',array('type_obs','oiseau_espece'))->condition('nid_id',$n->nid,'=')->orderBy('obs_id', 'DESC')->execute()->fetchAssoc();
    if($nob['type_obs'] >= 9 || $nob['type_obs']==''){
      $ut=0; //Non Utilisé
      $sp='';
    }else{
      $ut=1; //Utilisé!
      //$sp='';
      $sp=htmlentities($nob['oiseau_espece'],ENT_QUOTES);
    }
    $iw="<div><h2><b>".(($n->dncv_no!='')?'DNCV#'.$n->dncv_no:$n->nom_nichoir)."</b></h2><div>".(($n->parc!='')?$n->parc.'<br>':'').(($n->ecole!='')?$n->ecole.'<br>':'')."Date d&#39;installation: ".$n->date_installation."</div></div><br>";
    if($ut==1){
      $iw.='<b>Utilisé!<br>'.$sp.'</b>';
    }
    $geo=json_decode($n->geography);
    $geo->features[0]->properties=array(
      'nid'=>$n->nid,
      'infowin'=>$iw,
      'utilise'=>$ut,
      );    
    $geog[]=$geo->features[0];
    //$output.="";
  }
  $arr=array(
    'type'=>'FeatureCollection',
    'features' => $geog,
    );
  $output.="<input type='hidden' name='geography' value='".json_encode($arr,JSON_UNESCAPED_SLASHES)."'>";
  $output.='<div id="map" style="width:100%;height:'.$height.'px;max-width: none;max-height:85%;"></div><br><br>';
  return $output;
}

/**
 * Implements hook_block_info().
 */
function nids_block_info() {
  $blocks = array();
  $blocks['nids_list_nichoirs'] = array(
   'info' => t('A block to show nids_nichoirs datasets'),
   'cache' => DRUPAL_NO_CACHE,
   'region' => 'content',
   'status' => TRUE,
   'visibility' => BLOCK_VISIBILITY_LISTED,
   'pages' => 'explorer/nids_'
   );
  
  $blocks['nids_oiseaux_cour'] = array(
   'info' => t('A block to show nids_observations_dans_ta_cour datasets'),
   'cache' => DRUPAL_NO_CACHE,
   'region' => 'content',
   'status' => TRUE,
   'visibility' => BLOCK_VISIBILITY_LISTED,
   'pages' => 'explorer/nids_oiseaux_cour_liste'
   );
  //ajouter/danstacour/danstonichoir
  $blocks['nids_obsv_cour_nichoir'] = array(
   'info' => t('A block to show ajouter/danstacour/danstonichoir datasets'),
   'cache' => DRUPAL_NO_CACHE,
   'region' => 'content',
   'status' => TRUE,
   'visibility' => BLOCK_VISIBILITY_LISTED,
   'pages' => 'nids_obsv_cour_nichoir'
   );

  $blocks['nids_nichoirs_obs_list'] = array(
   'info' => t('A block to show the nichoir observations datasets'),
   'cache' => DRUPAL_NO_CACHE,
   'region' => 'content',
   'status' => TRUE,
   'visibility' => BLOCK_VISIBILITY_LISTED,
   'pages' => 'nids_oiseaux_cour_list'
   );
  $blocks['nids_list_own_nichoirs'] = array(
   'info' => t('A block to show your own nichoir'),
   'cache' => DRUPAL_NO_CACHE,
   'region' => 'content',
   'status' => TRUE,
   'visibility' => BLOCK_VISIBILITY_LISTED,
   'pages' => 'explorer/mes_nichoirs'
   );
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function nids_block_view($block_name = '') {
  $rows = array();
  $header = array();
  global $user;
    $user_role=db_select('users_roles','r')
    ->fields('r',array('rid'))
    ->condition('uid', $user->uid,'=')
    ->execute()
    ->fetchField();
  $isscientist=($user_role==3 || $user_role==6);
  
  if ($block_name == 'nids_list_nichoirs') {
    $query = db_select('nids_nichoirs', 'n');
    $query->join('nids_users', 'u', 'n.uid = u.uid');
    $query->fields('n',array('nid', 'uid', 'dncv', 'dncv_no', 
      'nom_nichoir', 'parc', 'ecole', 'geography', 'date_installation', 
      'habitat', 'hauteur', 'orientation', 'trou'))
    ->fields('u',array('prenom', 'nom_famille'))->orderBy('nid', 'DESC');

    $result = $query->execute();
    global $user;
    $user_role=db_select('users_roles','r')
    ->fields('r',array('rid'))
    ->condition('uid', $user->uid,'=')
    ->execute()
    ->fetchField();
   
    foreach ($result as $node1) {
      $isnode = node_load($node1->nid);
      $options = array('absolute' => TRUE);
      $url = url('node/'.$node1->nid, $options);
      $url2 = url('node/'.$node1->nid.'/view', $options);
      if(node_access('update',$node1->nid))
      	$edit='<a href='.$url.'/edit>Edit</a>';
      else
      	$edit='';
      	
     if ($node1->parc!='')
     		$parcecole=$node1->parc;
	  else if ($node1->ecole!='')
	  		$parcecole=$node1->ecole;
	  else
	  		$parcecole='Cours';

     $nomnumero = ($node1->dncv==0) ? $node1->nom_nichoir : 'DNCV #'.$node1->dncv_no;
    $nob = db_select('nids_nichoirs_obs', 'n')->fields('n',array('type_obs','oiseau_espece'))->condition('nid_id', $node1->nid,'=')->orderBy('obs_id', 'DESC')->execute()->fetchAssoc();
    if($nob['type_obs'] >= 9 || $nob['type_obs']==''){
      $ut='Non'; //Non Utilisé
      $sp='';
    }else{
     $ut=$nob['oiseau_espece'];
    }
    if ($isscientist){
      $header = array(t('Numéro/Nom du Nichoir'),t('Participant'), t('Localisation'), 
      t('Date d\'installation'), t('Habitat'), t('Hauteur (mètres)'), t('Orientation'),t('Occupé?'));      
      $rows[] = array('<a href='.$url2.'>'.$nomnumero.'</a>', 
      $node1->prenom. ' ' .$node1->nom_famille, $parcecole, $node1->date_installation, $node1->habitat, $node1->hauteur, 
      $node1->orientation, $ut, $edit);
    }
    else {
      $header = array(t('Numéro/Nom du Nichoir'),t('Localisation'), 
      t('Date d\'installation'), t('Habitat'), t('Hauteur (mètres)'), t('Orientation'),t('Occupé?'));    	
      $rows[] = array($nomnumero, $parcecole, 
      $node1->date_installation, $node1->habitat, $node1->hauteur, $node1->orientation,$ut);
    }
  }
      if(empty($header))
      	$header = array(t('Numéro/Nom du Nichoir'),t('Participant'), t('Localisation'), 
      					 	 t('Date d\'installation'), t('Habitat'), t('Hauteur (mètres)'), 
      					 	 t('Orientation'),t('Occupé?'));
      
    //Return the content of the block
    $content=theme('table', array('header' => $header, 'rows' => $rows));
    $block = array(
      'subject' => t(''),
      'content' => $content,
      );
    return $block;
  }  elseif ($block_name == 'nids_list_own_nichoirs') {
    $query = db_select('nids_nichoirs', 'n');
    $query->fields('n',array('nid', 'uid', 'dncv', 'dncv_no', 
      'nom_nichoir', 'parc', 'ecole', 'geography', 'date_installation', 
      'habitat', 'hauteur', 'orientation', 'trou'))->condition('uid',$user->uid,'=');

    $result = $query->execute();
    $geog=array();
    foreach ($result as $node1) {
      $isnode = node_load($node1->nid);
      $options = array('absolute' => TRUE);
      $url = url('node/'.$node1->nid, $options);
      $url2 = url('node/'.$node1->nid.'/view', $options);
      $edit='<a href='.$url.'/edit>Modifier</a>';
        
     if ($node1->parc!='')
        $parcecole=$node1->parc;
    else if ($node1->ecole!='')
        $parcecole=$node1->ecole;
    else
        $parcecole='Cours';

     $nomnumero = ($node1->dncv==0) ? $node1->nom_nichoir : 'DNCV #'.$node1->dncv_no;
    $nob = db_select('nids_nichoirs_obs', 'n')->fields('n',array('type_obs'))->condition('nid_id', $node1->nid,'=')->orderBy('obs_id', 'DESC')->execute()->fetchField();
    $ut = ($nob[0]>9 || $nob[0]=='')?'Non':'Oui';
      $header = array(t('Numéro/Nom du Nichoir'), t('Localisation'), 
      t('Date d\'installation'), t('Habitat'), t('Hauteur (mètres)'), t('Orientation'),t('Occupé?'));      
      $rows[] = array('<a href='.$url2.'>'.$nomnumero.'</a>', $parcecole, $node1->date_installation, $node1->habitat, $node1->hauteur, 
      $node1->orientation, $ut, $edit);
      $iw="<div><h2><b>".(($node1->dncv_no!='')?'DNCV #'.$node1->dncv_no:$node1->nom_nichoir)."</b></h2><div>".(($node1->parc!='')?$node1->parc:'').(($node1->ecole!='')?$node1->ecole:'')."</div>Date d&#39;installation: ".$node1->date_installation."</div>";
      $geo=json_decode($node1->geography);
      $geo->features[0]->properties=array(
        'nid'=>$node1->nid,
        'infowin'=>$iw,
        'utilise'=>$ut,
        );    
      $geog[]=$geo->features[0];
    //$output.="";
  }

    drupal_add_js('http://maps.google.com/maps/api/js?sensor=false');
    drupal_add_js(base_path().drupal_get_path('module', 'nids') . '/javascript/nids.map.js');
    drupal_add_js(array('nids_mode' => 'view'), 'setting');

    //Return the content of the block
  $arr=array(
    'type'=>'FeatureCollection',
    'features' => $geog,
    );
    $content="<input type='hidden' name='geography' value='".json_encode($arr,JSON_UNESCAPED_SLASHES)."'>";
    $content.="<div id='map' style='width: 100%;height: 500px;max-width: 95%;max-height: 85%;'></div><br><br>";
    $content.=theme('table', array('header' => $header, 'rows' => $rows));
    $block = array(
      'subject' => t(''),
      'content' => $content,
      );
    return $block;
  
  } //wasnt working cause I added one as an admin...
  elseif ($block_name == 'nids_oiseaux_cour_list') {
    $query2=db_select('nids_oiseaux_cour','t');
    $query2->join('nids_users', 'u', 't.uid = u.uid');
    $query2->fields('t',array('obs_id', 'uid', 'date_obs', 
      'rien_vu', 'duree_obs', 'oiseau_espece', 'nombre_individus'))
    ->fields('u',array('prenom', 'nom_famille'))->orderBy('obs_id', 'DESC');
    
    $result = $query2->execute();

    foreach ($result as $node2) {
      $isnode = node_load($node2->obs_id);
      $options = array('absolute' => TRUE);
      $url = url($node2->oiseau_espece, $options);
      ($node2->rien_vu == 1)? $oiseau = 'Rien observé' : $oiseau = $node2->oiseau_espece;
    
    if ($isscientist){
      $header = array(t('Participant'),t('Date d\'observation'), t('Durée d\'observation (min)'), t('Espèce'),t('Nombre d\'individus'));      
      $rows[] = array($node2->prenom. ' ' .$node2->nom_famille, $node2->date_obs, $node2->duree_obs, $oiseau, $node2->nombre_individus);
    }
    else {
      $header = array(t('Date d\'observation'), t('Durée d\'observation (min)'), t('Espèce'),t('Nombre d\'individus'));      
      $rows[] = array($node2->date_obs, $node2->duree_obs, $oiseau, $node2->nombre_individus);
    	}
    }

    //Return the content of the block
    $content=theme('table', array('header' => $header, 'rows' => $rows));
    $block = array(
      'subject' => t('Liste d\'observations dans les cours'),
      'content' => $content,
      );
    return $block;
  }
  
  elseif ($block_name == 'nids_nichoirs_obs_list') {
    $query3=db_select('nids_nichoirs_obs','t');
    $query3->join('nids_users', 'u', 't.uid = u.uid');
    $query3->fields('t',array('obs_id', 'uid', 'nid_id', 'date_obs', 
      'rien_vu', 'oiseau_espece', 'oiseau_espece_autre', 'type_obs', 'type_obs_autre'))
    ->fields('u',array('prenom', 'nom_famille'))->orderBy('obs_id', 'DESC');

    $result = $query3->execute();
    

    foreach ($result as $node3) {

      $isnode = node_load($node3->obs_id);
      $options = array('absolute' => TRUE);
      $url = url($node3->oiseau_espece, $options);
      if(empty($node3->oiseau_espece))
	      $myObs = $node3->oiseau_espece_autre;
      if(empty($node3->oiseau_espece_autre))
	      $myObs = $node3->oiseau_espece;
	      
      $typeObsv = (_nichoir_type_observation($node3->type_obs) == 'Autre' ? $node3->type_obs_autre : _nichoir_type_observation($node3->type_obs));
      
      if($node3->rien_vu == 1) {
      	$myObs = 'Je n\'ai rien vu';
      	$typeObsv = 'Aucune';
      }
  		if ($isscientist){
      	$rows[] = array($node3->prenom. ' ' .$node3->nom_famille,
        	$node3->date_obs, $myObs, $typeObsv);
        	$header = array(t('Participant'), t('Date d\'observation'), t('Oiseau èspece'), t('Type d\'observation'));
     	}
 		else {
 			$rows[] = array($node3 ->date_obs, $myObs, $typeObsv);
 			$header = array(t('Date d\'observation'), t('Oiseau èspece'), t('Type d\'observation'));
     	}
    }

    //Return the content of the block
    $content=theme('table', array('header' => $header, 'rows' => $rows));

    $block = array(
      'subject' => t('List of nids observations datasets'),
      'content' => $content,
      );
    return $block;
  }
  //*********************** This is the third view ******************************************************
  elseif ($block_name == 'nids_type_obs') {
    $query4=db_select('nids_nichoir_type_obs','t');
    $query4->fields('t',array('type_obs_id', 'type_obs_key', 'description'));
    $result = $query4->execute();
    $header = array(t('Type d\'Observation ID'), t('Type d\'Observation Key'), t('Description'));

      $isnode = node_load($node4->obs_id);
      $options = array('absolute' => TRUE);
      
      $rows[] = array($node4->type_obs_id, $node4->type_obs_key, $node4->description);

    //Return the content of the block
    $content=theme('table', array('header' => $header, 'rows' => $rows));
    $block = array(
      'subject' => t('List of nids observation in dans ta Cour datasets'),
      'content' => $content,
      );
    return $block;
  }
  	 // This is for the "View" when in nids_node_view(), it has an extra condition
  elseif ($block_name == 'nids_nichoirs_obs_list_view') {
	$myNode = menu_get_object();
	$myNode2 = $myNode->nid;
	
    $query5=db_select('nids_nichoirs_obs','t');
    $query5->join('nids_users', 'u', 't.uid = u.uid');
    $query5->fields('t',array('obs_id', 'uid', 'nid_id', 'date_obs', 
      'rien_vu', 'oiseau_espece', 'oiseau_espece_autre', 'type_obs', 'type_obs_autre'))
    ->fields('u',array('prenom', 'nom_famille'))
    ->condition('nid_id',$myNode2,'=');

    $result = $query5->execute();
    

    foreach ($result as $node3) {

      $isnode = node_load($node3->obs_id);
      $options = array('absolute' => TRUE);
      $url = url($node3->oiseau_espece, $options);
      if(empty($node3->oiseau_espece))
	      $myObs = $node3->oiseau_espece_autre;
      if(empty($node3->oiseau_espece_autre))
	      $myObs = $node3->oiseau_espece;
	      
      $typeObsv = (_nichoir_type_observation($node3->type_obs) == 'Autre' ? $node3->type_obs_autre : _nichoir_type_observation($node3->type_obs));
      
      if($node3->rien_vu == 1) {
      	$myObs = 'Je n\'ai rien vu';
      	$typeObsv = 'Aucune';
      }
  		if ($isscientist){
  			$rows[] = array($node3->prenom. ' ' .$node3->nom_famille,
   	   $node3->date_obs, $myObs, $typeObsv);
        	$header = array(t('Participant'), t('Date d\'Observation'), t('Oiseau Èspece'), t('Type d\'Observation'));
     	}
 		else {
 			$rows[] = array($node3->date_obs,$myObs, $typeObsv);
 			$header = array(t('Date d\'Observation'), t('Oiseau Èspece'), t('Type d\'Observation'));
     	}

    }

    //Return the content of the block
    $content=theme('table', array('header' => $header, 'rows' => $rows));
    $block = array(
      'subject' => t('List of nids observations datasets'),
      'content' => $content,
      );
    return $block;
  }

}

function nichoir_load($nodes) {
	$cp=$_GET['q'];
	$isview = strpos($cp,'view');
	$isedit = strpos($cp,'edit');
	
	if($nodes[key($nodes)]->type=='nichoir' && $isedit) {		
		global $user;
		$result = db_select('nids_nichoirs', 'n')->fields('n')
		->condition('n.nid', $nodes[key($nodes)]->nid, '=')
		->execute()
		->fetchAll();
		foreach ($result as $record){
			$nodes[key($nodes)]->uid = $user->uid;
			$nodes[key($nodes)]->dncv = $record->dncv;
			$nodes[key($nodes)]->dncv_no = $record->dncv_no;
			
			if ($record->parc!='')
     			$nodes[key($nodes)]->dans_un_parc_ecole = 'Parc';
	  		else if ($record->ecole!='')
	  			$nodes[key($nodes)]->dans_un_parc_ecole = 'École';
	  		if($record->ecole!='' && $record->parc!='')
	  			$nodes[key($nodes)]->dans_un_parc_ecole = 'Non';
	  			
			$nodes[key($nodes)]->ecole = $record->ecole;
			$nodes[key($nodes)]->parc = $record->parc;
			$nodes[key($nodes)]->nom_nichoir = $record->nom_nichoir;
			$nodes[key($nodes)]->geography = $record->geography;
			$nodes[key($nodes)]->date_installation = $record->date_installation;
			$nodes[key($nodes)]->habitat = $record->habitat;
			$nodes[key($nodes)]->hauteur = $record->hauteur;
			$nodes[key($nodes)]->trou = $record->trou;
			$nodes[key($nodes)]->orientation = $record->orientation;
			}
		}
	
		if($nodes[key($nodes)]->type=='nichoir' && $isview) {		
		global $user;
		$result = db_select('nids_nichoirs', 'n')->fields('n')
		->condition('n.nid', $nodes[key($nodes)]->nid, '=')
		->execute()
		->fetchAll();
		foreach ($result as $record){
			$nodes[key($nodes)]->uid = $user->uid;
			$nodes[key($nodes)]->dncv = $record->dncv;
			$nodes[key($nodes)]->dncv_no = $record->dncv_no;
			
			if ($record->parc!='')
     			$nodes[key($nodes)]->dans_un_parc_ecole = 'Parc';
	  		else if ($record->ecole!='')
	  			$nodes[key($nodes)]->dans_un_parc_ecole = 'École';
	  		if($record->ecole!='' && $record->parc!='')
	  			$nodes[key($nodes)]->dans_un_parc_ecole = 'Non';
	  			
			$nodes[key($nodes)]->ecole = $record->ecole;
			$nodes[key($nodes)]->parc = $record->parc;
			$nodes[key($nodes)]->nom_nichoir = $record->nom_nichoir;
			$nodes[key($nodes)]->geography = $record->geography;
			$nodes[key($nodes)]->date_installation = $record->date_installation;
			$nodes[key($nodes)]->habitat = $record->habitat;
			$nodes[key($nodes)]->hauteur = $record->hauteur;
			$nodes[key($nodes)]->trou = $record->trou;
			$nodes[key($nodes)]->orientation = $record->orientation;
			}	
		}
	return $nodes;
}


function quastuvu1_callback(){
  $output=drupal_render(menu_tree('quastuvu1')).plusdiv();
  return $output;
}


function quastuvu2_callback(){
  $output=drupal_render(menu_tree('quastuvu2')).plusdiv();
  return $output;
}
function quastuvu3_callback(){
  $output=drupal_render(menu_tree('quastuvu5')).plusdiv();
  return $output;
}

function plusdiv(){
  return '<div style="height:100px"></div>';
}

function ecole_callback(){
  return drupal_render(menu_tree('quastuvu5')).plusdiv();
}

function quastuvu4_callback(){
  return drupal_get_form('nids_obscour_form');
}

function nichoir_callback(){
  //$block = module_invoke('nids', 'block_view', 'form_nichoir');
  return drupal_get_form('nids_obsnichoir_form');//$block['content'];
}


function cour_callback(){
  return drupal_get_form('nids_obscour_form');
}

function ajout_nichoir_callback(){
  module_load_include('inc', 'node', 'node.pages');
  $form = node_add('nichoir'); 
  return drupal_render($form);
}

function ajax_parc_nichoir_callback(){
  return $form['nichoir_fs'];
}


function inscription_callback(){
  $form = drupal_get_form('user_register_form');
  return drupal_render($form);
}

function connexion_callback(){
  $form = drupal_get_form('user_login');
  return drupal_render($form);
}


function ajax_ajout_oiseau_callback($form, $form_state) {
  return $form['oiseau'];
}

function _nichoir_type_observation($key = NULL) {
  $options = array(
    1 => t('Entrée ou sortie du nichoir'),
    2 => t('Apport de brindilles'),
    3 => t("Accouplement"),
    4 => t('Sons de poussins, quémande alimentaire'),
    5 => t('Alimentation des poussins par les parents (bec avec des chenilles, etc.)'),
    6 => t('Oiseau chante sur ou proche du nichoir'),
    7 => t('Il y a des oeufs dans le nid'),
    8 => t('Il y a des oisillons dans le nid'),
    9 => t('Les oiseaux semblent avoir abandonné le nid'),
    10 => t('Autre'),
    );
  return ($key) ? $options[$key] : $options;
}

function _observation_oiseaux() {
  $options = array(
        null=>"Choisir...",
        "Espèces communes"=>array( //"--- Espèces communes ---",
        "Bruant à couronne blanche"=>"Bruant à couronne blanche",
        "Bruant à gorge blanche"=>"Bruant à gorge blanche",
        "Bruant chanteur"=>"Bruant chanteur",
        "Carouge à épaulette"=>"Carouge à épaulette",
        "Chardonneret jaune"=>"Chardonneret jaune",
        "Colibri à gorge rubis"=>"Colibri à gorge rubis",
        "Corneille d'Amérique"=>"Corneille d'Amérique",
        "Étourneau sansonnet"=>"Étourneau sansonnet",
        "Geai bleu"=>"Geai bleu",
        "Hirondelle bicolore"=>"Hirondelle bicolore",
        "Jaseur d'Amérique"=>"Jaseur d'Amérique",
        "Junco ardoisé"=>"Junco ardoisé",
        "Merle d'Amérique"=>"Merle d'Amérique",
        "Mésange à tête noire"=>"Mésange à tête noire",
        "Moineau domestique"=>"Moineau domestique",
        "Paruline è croupion jaune"=>"Paruline è croupion jaune",
        "Pic chevelu"=>"Pic chevelu",
        "Quiscale bronzé"=>"Quiscale bronzé",
        "Roselin pourpré"=>"Roselin pourpré",
        "Tourterelle triste"=>"Tourterelle triste",
        ),
      "Autres espèces"=>array(//"--- Autres espèces ---",
        "Alouette hausse-col"=>"Alouette hausse-col",
        "Autour des palombes"=>"Autour des palombes",
        "Avocette d'Amérique"=>"Avocette d'Amérique",
        "Balbuzard pêcheur"=>"Balbuzard pêcheur",
        "Bécasseau semipalmé"=>"Bécasseau semipalmé",
        "Bernache cravant"=>"Bernache cravant",
        "Bernache du Canada"=>"Bernache du Canada",
        "Bruant de Lincoln"=>"Bruant de Lincoln",
        "Bruant des prés"=>"Bruant des prés",
        "Bruant familier"=>"Bruant familier",
        "Bruant fauve"=>"Bruant fauve",
        "Bruant hudsonien"=>"Bruant hudsonien",
        "Busard St-Martin"=>"Busard St-Martin",
        "Buse à queue rousse"=>"Buse à queue rousse",
        "Buse pattue"=>"Buse pattue",
        "Canard arlequin"=>"Canard arlequin",
        "Canard colvert"=>"Canard colvert",
        "Canard d'Amérique"=>"Canard d'Amérique",
        "Canard noir"=>"Canard noir",
        "Canard pilet"=>"Canard pilet",
        "Chevalier grivelé"=>"Chevalier grivelé",
        "Chevalier solitaire"=>"Chevalier solitaire",
        "Cormorant à aigrette"=>"Cormorant à aigrette",
        "Crécerelle d'Amérique"=>"Crécerelle d'Amérique",
        "Eider à duvet"=>"Eider à duvet",
        "Eider à tête grise"=>"Eider à tête grise",
        "Épervier brun"=>"Épervier brun",
        "Faucon émerillon"=>"Faucon émerillon",
        "Faucon pèlerin"=>"Faucon pèlerin",
        "Fou de Bassan"=>"Fou de Bassan",
        "Fuligule à collier"=>"Fuligule à collier",
        "Fuligule milouinan"=>"Fuligule milouinan",
        "Garrot à œil d'or"=>"Garrot à œil d'or",
        "Garrot d'Islande"=>"Garrot d'Islande",
        "Gélinotte huppé"=>"Gélinotte huppé",
        "Goéland à bec cerclé"=>"Goéland à bec cerclé",
        "Goéland arctique"=>"Goéland arctique",
        "Goéland argenté"=>"Goéland argenté",
        "Goéland bourgmestre"=>"Goéland bourgmestre",
        "Goéland marin"=>"Goéland marin",
        "Grand Chevalier"=>"Grand Chevalier",
        "Grand Corbeau"=>"Grand Corbeau",
        "Grand Harle"=>"Grand Harle",
        "Grand Heron"=>"Grand Heron",
        "Grand Pic"=>"Grand Pic",
        "Grèbe à bec bigarré"=>"Grèbe à bec bigarré",
        "Grèbe jougris"=>"Grèbe jougris",
        "Grive à dos olive"=>"Grive à dos olive",
        "Grive fauve"=>"Grive fauve",
        "Grive solitaire"=>"Grive solitaire",
        "Gros-bec errant"=>"Gros-bec errant",
        "Guillemot à miroir"=>"Guillemot à miroir",
        "Harelde kakawi"=>"Harelde kakawi",
        "Harle couronné"=>"Harle couronné",
        "Harle huppé"=>"Harle huppé",
        "Hirondelle rustique"=>"Hirondelle rustique",
        "Jaseur boréal"=>"Jaseur boréal",
        "Macareux moine"=>"Macareux moine",
        "Macreuse à bec jaune"=>"Macreuse à bec jaune",
        "Macreuse à front blanc"=>"Macreuse à front blanc",
        "Macreuse brune"=>"Macreuse brune",
        "Martin-pêcheur d'Amérique"=>"Martin-pêcheur d'Amérique",
        "Merlebleu de l'Est"=>"Merlebleu de l'Est",
        "Mésange à tête brune"=>"Mésange à tête brune",
        "Mésangeai du Canada"=>"Mésangeai du Canada",
        "Moqueur chat"=>"Moqueur chat",
        "Moucherolle tchébec"=>"Moucherolle tchébec",
        "Oie des neiges"=>"Oie des neiges",
        "Paruline à calotte noire"=>"Paruline à calotte noire",
        "Paruline à collier"=>"Paruline à collier",
        "Paruline à gorge noire"=>"Paruline à gorge noire",
        "Paruline à tête cendrée"=>"Paruline à tête cendrée",
        "Paruline bleue"=>"Paruline bleue",
        "Paruline des ruisseaux"=>"Paruline des ruisseaux",
        "Paruline flamboyant"=>"Paruline flamboyant",
        "Paruline jaune"=>"Paruline jaune",
        "Paruline masquée"=>"Paruline masquée",
        "Paruline noir et blanc"=>"Paruline noir et blanc",
        "Paruline obscur"=>"Paruline obscur",
        "Paruline tigrée"=>"Paruline tigrée",
        "Petit Garrot"=>"Petit Garrot",
        "Pic flamboyant"=>"Pic flamboyant",
        "Pic maculé"=>"Pic maculé",
        "Pic mineur"=>"Pic mineur",
        "Pie-grièche grise"=>"Pie-grièche grise",
        "Pigeon biset"=>"Pigeon biset",
        "Pipit d'Amérique"=>"Pipit d'Amérique",
        "Plectrophane des neiges"=>"Plectrophane des neiges",
        "Plectrophane lapon"=>"Plectrophane lapon",
        "Plongeon catmarin"=>"Plongeon catmarin",
        "Plongeon huard"=>"Plongeon huard",
        "Pluvier kildir"=>"Pluvier kildir",
        "Pluvier semipalmé"=>"Pluvier semipalmé",
        "Pypargue à tête blanche"=>"Pypargue à tête blanche",
        "Roitelet à couronne dorée"=>"Roitelet à couronne dorée",
        "Roitelet à couronne rubis"=>"Roitelet à couronne rubis",
        "Roselin familier"=>"Roselin familier",
        "Sarcelle à ailes bleues"=>"Sarcelle à ailes bleues",
        "Sarcelle d'été"=>"Sarcelle d'été",
        "Sarcelle d'hiver"=>"Sarcelle d'hiver",
        "Sitelle à poitrine blanche"=>"Sitelle à poitrine blanche",
        "Sitelle à poitrine rousse"=>"Sitelle à poitrine rousse",
        "Sizerin blanchâtre"=>"Sizerin blanchâtre",
        "Sizerin flammé"=>"Sizerin flammé",
        "Tarin des pins"=>"Tarin des pins",
        "Tohi à flancs roux"=>"Tohi à flancs roux",
        "Troglodyte des forêts"=>"Troglodyte des forêts",
        "Troglodyte familier"=>"Troglodyte familier",
        "Urubu à tête rouge"=>"Urubu à tête rouge",
        "Vacher à tête brune"=>"Vacher à tête brune",
        "Viréo à tête bleue"=>"Viréo à tête bleue",
        "Viréo aux yeux rouges"=>"Viréo aux yeux rouges",
        ),
    );
  return $options;
}

function nids_coordinate_conversion_callback($string = "") {
  $converted_coordinates = array();
  $input = ($string) ? $string : _remove_empty_lines($_POST['coordinates']);
  $coordinates = explode("\n", $input);
  foreach($coordinates as $coordinate) {
    if(!array_key_exists($coordinate, $converted_coordinates)) {
      $converted = _make_coordinates($coordinate);
      $status = (_check_coordinate($converted)) ? 'success' : 'fail';
      $converted_coordinates[$coordinate] = array(
        'status' => $status,
        'converted' => $converted
        );
    }
  }
  drupal_json_output($converted_coordinates);
}

function _remove_empty_lines($string) {
  return preg_replace("/(^[\r\n]*|[\r\n]+)[\s\t]*[\r\n]+/", "\n", $string);
}

function _make_coordinates($point) {
  $loc = preg_replace('/\t/', '|', $point); //replace tabs with pipes
  $loc = preg_replace('/[\p{Z}\s]/u', ' ', $loc); //remove all extra spaces
  $loc = trim(preg_replace('/[^\|\d\s,;.\-NSEWO°ºdms\'"]/i', '', $loc));
  if(preg_match('/[NSEWO]/', $loc) != 0) {
    $coord = preg_split("/[\|,;]/", $loc); //split the coords by a pipe, comma, semicolon
    if (!array_key_exists(1, $coord)) { return array(null, null); }
    $coord = (preg_match('/[EWO]/', $coord[1]) != 0) ? $coord : array_reverse($coord);
    return array(_dms_to_deg(trim($coord[0])),_dms_to_deg(trim($coord[1])));
  } else {
    return preg_split("/[\|\s,;]+/",$loc); //split the coords by a pipe, space, comma, semicolon
  }
}


function _dms_to_deg($dms) {
  $dms = stripslashes($dms);
  $neg = (preg_match('/[SWO]/i', $dms) == 0) ? 1 : -1;
  $dms = preg_replace('/(^\s?-)|(\s?[NSEWO]\s?)/i','', $dms);
  $pattern = "/(\\d*\\.?\\d+)(?:[°ºd: ]+)(\\d*\\.?\\d+)*(?:['m′: ])*(\\d*\\.?\\d+)*[\"s″ ]?/i";
  $parts = preg_split($pattern, $dms, 0, PREG_SPLIT_NO_EMPTY | PREG_SPLIT_DELIM_CAPTURE);
  if (!$parts) { return; }
  // parts: 0 = degree, 1 = minutes, 2 = seconds
  $d = isset($parts[0]) ? (float)$parts[0] : 0;
  $m = isset($parts[1]) ? (float)$parts[1] : 0;
  if(strpos($dms, ".") > 1 && isset($parts[2])) {
    $m = (float)($parts[1] . '.' . $parts[2]);
    unset($parts[2]);
  }
  $s = isset($parts[2]) ? (float)$parts[2] : 0;
  $dec = ($d + ($m/60) + ($s/3600))*$neg; 
  return $dec;
}

function _check_coordinate($coord) {
  $output = false;
  if(is_numeric($coord[0])
    && is_numeric($coord[1])
    && $coord[0] <= 90 
    && $coord[0] >= -90 
    && $coord[1] <= 180 
    && $coord[1] >= -180) { $output = true; }
    return $output;
}


?>
